{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/mainmenu/lib/labmenu.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/mainmenu/lib/mainmenu.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/mainmenu/lib/file.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/mainmenu/lib/edit.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/mainmenu/lib/help.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/mainmenu/lib/kernel.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/mainmenu/lib/run.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/mainmenu/lib/settings.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/mainmenu/lib/view.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/mainmenu/lib/tabs.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/mainmenu/lib/tokens.js"],"names":["Private","JupyterLabMenu","options","includeSeparators","this","_groups","_isDisposed","menu","Menu","_includeSeparators","items","rank","rankGroup","size","length","undefined","groupIndex","ArrayExt","itemCmp","insertIndex","i","added","push","insertItem","type","item","DisposableDelegate","forEach","removeItem","splice","dispose","first","second","FileMenu","super","quitEntry","newMenu","closeAndCleaners","Set","consoleCreators","clear","EditMenu","undoers","clearers","goToLiners","HelpMenu","kernelUsers","KernelMenu","RunMenu","codeRunners","SettingsMenu","ViewMenu","editorViewers","TabsMenu","MainMenu","MenuBar","commands","_items","editMenu","fileMenu","helpMenu","kernelMenu","runMenu","settingsMenu","viewMenu","tabsMenu","addMenu","MenuSvg","menus","rankItem","index","disposed","connect","_onMenuDisposed","insertMenu","removeMenu","IMainMenu","Token"],"mappings":"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","file":"5952.1127c482f95387975206.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { ArrayExt } from '@lumino/algorithm';\nimport { DisposableDelegate } from '@lumino/disposable';\nimport { Menu } from '@lumino/widgets';\n/**\n * An extensible menu for JupyterLab application menus.\n */\nexport class JupyterLabMenu {\n    /**\n     * Construct a new menu.\n     *\n     * @param options - Options for the phosphor menu.\n     *\n     * @param includeSeparators - whether to include separators between the\n     *   groups that are added to the menu.\n     */\n    constructor(options, includeSeparators = true) {\n        this._groups = [];\n        this._isDisposed = false;\n        this.menu = new Menu(options);\n        this._includeSeparators = includeSeparators;\n    }\n    /**\n     * Add a group of menu items specific to a particular\n     * plugin.\n     *\n     * @param items - the list of menu items to add.\n     *\n     * @param rank - the rank in the menu in which to insert the group.\n     */\n    addGroup(items, rank) {\n        const rankGroup = {\n            size: items.length,\n            rank: rank === undefined ? 100 : rank\n        };\n        // Insert the plugin group into the list of groups.\n        const groupIndex = ArrayExt.upperBound(this._groups, rankGroup, Private.itemCmp);\n        // Determine the index of the menu at which to insert the group.\n        let insertIndex = 0;\n        for (let i = 0; i < groupIndex; ++i) {\n            if (this._groups[i].size > 0) {\n                insertIndex += this._groups[i].size;\n                // Increase the insert index by two extra in order\n                // to include the leading and trailing separators.\n                insertIndex += this._includeSeparators ? 2 : 0;\n            }\n        }\n        // Keep an array of the menu items that have been created.\n        const added = [];\n        // Insert a separator before the group.\n        // Phosphor takes care of superfluous leading,\n        // trailing, and duplicate separators.\n        if (this._includeSeparators) {\n            added.push(this.menu.insertItem(insertIndex++, { type: 'separator' }));\n        }\n        // Insert the group.\n        for (const item of items) {\n            added.push(this.menu.insertItem(insertIndex++, item));\n        }\n        // Insert a separator after the group.\n        if (this._includeSeparators) {\n            added.push(this.menu.insertItem(insertIndex++, { type: 'separator' }));\n        }\n        ArrayExt.insert(this._groups, groupIndex, rankGroup);\n        return new DisposableDelegate(() => {\n            added.forEach(i => this.menu.removeItem(i));\n            this._groups.splice(groupIndex, 1);\n        });\n    }\n    /**\n     * Whether the menu has been disposed.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of the resources held by the menu.\n     */\n    dispose() {\n        this._groups.length = 0;\n        this._isDisposed = true;\n        this.menu.dispose();\n    }\n}\n/**\n * A namespace for private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * A comparator function for menu rank items.\n     */\n    function itemCmp(first, second) {\n        return first.rank - second.rank;\n    }\n    Private.itemCmp = itemCmp;\n})(Private || (Private = {}));\n//# sourceMappingURL=labmenu.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { MenuSvg } from '@jupyterlab/ui-components';\nimport { ArrayExt } from '@lumino/algorithm';\nimport { MenuBar } from '@lumino/widgets';\nimport { FileMenu } from './file';\nimport { EditMenu } from './edit';\nimport { HelpMenu } from './help';\nimport { KernelMenu } from './kernel';\nimport { RunMenu } from './run';\nimport { SettingsMenu } from './settings';\nimport { ViewMenu } from './view';\nimport { TabsMenu } from './tabs';\n/**\n * The main menu class.  It is intended to be used as a singleton.\n */\nexport class MainMenu extends MenuBar {\n    /**\n     * Construct the main menu bar.\n     */\n    constructor(commands) {\n        super();\n        this._items = [];\n        this.editMenu = new EditMenu({ commands });\n        this.fileMenu = new FileMenu({ commands });\n        this.helpMenu = new HelpMenu({ commands });\n        this.kernelMenu = new KernelMenu({ commands });\n        this.runMenu = new RunMenu({ commands });\n        this.settingsMenu = new SettingsMenu({ commands });\n        this.viewMenu = new ViewMenu({ commands });\n        this.tabsMenu = new TabsMenu({ commands });\n        this.addMenu(this.fileMenu.menu, { rank: 1 });\n        this.addMenu(this.editMenu.menu, { rank: 2 });\n        this.addMenu(this.viewMenu.menu, { rank: 3 });\n        this.addMenu(this.runMenu.menu, { rank: 4 });\n        this.addMenu(this.kernelMenu.menu, { rank: 5 });\n        this.addMenu(this.tabsMenu.menu, { rank: 500 });\n        this.addMenu(this.settingsMenu.menu, { rank: 999 });\n        this.addMenu(this.helpMenu.menu, { rank: 1000 });\n    }\n    /**\n     * Add a new menu to the main menu bar.\n     */\n    addMenu(menu, options = {}) {\n        // override default renderer with svg-supporting renderer\n        MenuSvg.overrideDefaultRenderer(menu);\n        if (ArrayExt.firstIndexOf(this.menus, menu) > -1) {\n            return;\n        }\n        const rank = 'rank' in options ? options.rank : 100;\n        const rankItem = { menu, rank };\n        const index = ArrayExt.upperBound(this._items, rankItem, Private.itemCmp);\n        // Upon disposal, remove the menu and its rank reference.\n        menu.disposed.connect(this._onMenuDisposed, this);\n        ArrayExt.insert(this._items, index, rankItem);\n        /**\n         * Create a new menu.\n         */\n        this.insertMenu(index, menu);\n    }\n    /**\n     * Dispose of the resources held by the menu bar.\n     */\n    dispose() {\n        this.editMenu.dispose();\n        this.fileMenu.dispose();\n        this.helpMenu.dispose();\n        this.kernelMenu.dispose();\n        this.runMenu.dispose();\n        this.settingsMenu.dispose();\n        this.viewMenu.dispose();\n        this.tabsMenu.dispose();\n        super.dispose();\n    }\n    /**\n     * Handle the disposal of a menu.\n     */\n    _onMenuDisposed(menu) {\n        this.removeMenu(menu);\n        const index = ArrayExt.findFirstIndex(this._items, item => item.menu === menu);\n        if (index !== -1) {\n            ArrayExt.removeAt(this._items, index);\n        }\n    }\n}\n/**\n * A namespace for private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * A comparator function for menu rank items.\n     */\n    function itemCmp(first, second) {\n        return first.rank - second.rank;\n    }\n    Private.itemCmp = itemCmp;\n})(Private || (Private = {}));\n//# sourceMappingURL=mainmenu.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { JupyterLabMenu } from './labmenu';\n/**\n * An extensible FileMenu for the application.\n */\nexport class FileMenu extends JupyterLabMenu {\n    constructor(options) {\n        super(options);\n        this.quitEntry = false;\n        // Create the \"New\" submenu.\n        this.newMenu = new JupyterLabMenu(options, false);\n        this.closeAndCleaners = new Set();\n        this.consoleCreators = new Set();\n    }\n    /**\n     * Dispose of the resources held by the file menu.\n     */\n    dispose() {\n        this.newMenu.dispose();\n        this.consoleCreators.clear();\n        super.dispose();\n    }\n}\n//# sourceMappingURL=file.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { JupyterLabMenu } from './labmenu';\n/**\n * An extensible Edit menu for the application.\n */\nexport class EditMenu extends JupyterLabMenu {\n    /**\n     * Construct the edit menu.\n     */\n    constructor(options) {\n        super(options);\n        this.undoers = new Set();\n        this.clearers = new Set();\n        this.goToLiners = new Set();\n    }\n    /**\n     * Dispose of the resources held by the edit menu.\n     */\n    dispose() {\n        this.undoers.clear();\n        this.clearers.clear();\n        super.dispose();\n    }\n}\n//# sourceMappingURL=edit.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { JupyterLabMenu } from './labmenu';\n/**\n * An extensible Help menu for the application.\n */\nexport class HelpMenu extends JupyterLabMenu {\n    /**\n     * Construct the help menu.\n     */\n    constructor(options) {\n        super(options);\n        this.kernelUsers = new Set();\n    }\n}\n//# sourceMappingURL=help.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { JupyterLabMenu } from './labmenu';\n/**\n * An extensible Kernel menu for the application.\n */\nexport class KernelMenu extends JupyterLabMenu {\n    /**\n     * Construct the kernel menu.\n     */\n    constructor(options) {\n        super(options);\n        this.kernelUsers = new Set();\n    }\n    /**\n     * Dispose of the resources held by the kernel menu.\n     */\n    dispose() {\n        this.kernelUsers.clear();\n        super.dispose();\n    }\n}\n//# sourceMappingURL=kernel.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { JupyterLabMenu } from './labmenu';\n/**\n * An extensible Run menu for the application.\n */\nexport class RunMenu extends JupyterLabMenu {\n    /**\n     * Construct the run menu.\n     */\n    constructor(options) {\n        super(options);\n        this.codeRunners = new Set();\n    }\n    /**\n     * Dispose of the resources held by the run menu.\n     */\n    dispose() {\n        this.codeRunners.clear();\n        super.dispose();\n    }\n}\n//# sourceMappingURL=run.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { JupyterLabMenu } from './labmenu';\n/**\n * An extensible Settings menu for the application.\n */\nexport class SettingsMenu extends JupyterLabMenu {\n    /**\n     * Construct the settings menu.\n     */\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=settings.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { JupyterLabMenu } from './labmenu';\n/**\n * An extensible View menu for the application.\n */\nexport class ViewMenu extends JupyterLabMenu {\n    /**\n     * Construct the view menu.\n     */\n    constructor(options) {\n        super(options);\n        this.editorViewers = new Set();\n    }\n    /**\n     * Dispose of the resources held by the view menu.\n     */\n    dispose() {\n        this.editorViewers.clear();\n        super.dispose();\n    }\n}\n//# sourceMappingURL=view.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { JupyterLabMenu } from './labmenu';\n/**\n * An extensible Tabs menu for the application.\n */\nexport class TabsMenu extends JupyterLabMenu {\n    /**\n     * Construct the tabs menu.\n     */\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=tabs.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Token } from '@lumino/coreutils';\n/* tslint:disable */\n/**\n * The main menu token.\n */\nexport const IMainMenu = new Token('@jupyterlab/mainmenu:IMainMenu');\n//# sourceMappingURL=tokens.js.map"],"sourceRoot":""}