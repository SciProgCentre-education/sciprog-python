{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@retrolab/application-extension/lib/index.js"],"names":["TREE_PATTERN","RegExp","CommandIDs","toggleTop","toggleZen","openLab","openTree","logo","id","autoStart","activate","app","baseUrl","PageConfig","node","document","createElement","href","target","rel","Widget","retroInlineIcon","jupyterIcon","element","container","elementPosition","padding","height","width","shell","add","rank","opener","requires","IRouter","IDocumentManager","router","docManager","commands","command","addCommand","execute","args","_a","matches","path","match","file","decodeURIComponent","ext","PathExt","restored","then","open","undefined","ref","register","pattern","noTabsMenu","IMainMenu","menu","tabsMenu","dispose","pages","optional","ICommandPalette","palette","label","window","forEach","addItem","category","viewMenu","addGroup","paths","provides","JupyterFrontEnd","RetroApp","Error","base","urls","Router","started","route","addEventListener","sessionDialogs","ISessionContextDialogs","sessionContextDialogs","RetroShell","IRetroShell","spacer","top","DOMUtils","addClass","tabTitle","setTabTitle","current","currentWidget","DocumentWidget","update","basename","context","title","pathChanged","connect","currentChanged","widget","addTitle","async","children","length","h","textContent","appendChild","style","marginLeft","onclick","result","renameDialog","encoded","encodeURIComponent","navigate","skipRouting","topVisibility","retroShell","setHidden","isVisible","isToggled","onChanged","format","expandTop","collapseTop","formatChanged","translator","TranslationManager","ITranslator","zen","elem","documentElement","toggleOff","zenModeEnabled","exitFullscreen","requestFullscreen","fullscreenElement"],"mappings":"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","file":"4925.058ecb003261219143d5.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { IRouter, JupyterFrontEnd, Router } from '@jupyterlab/application';\nimport { sessionContextDialogs, ISessionContextDialogs, DOMUtils, ICommandPalette } from '@jupyterlab/apputils';\nimport { PageConfig, PathExt } from '@jupyterlab/coreutils';\nimport { IDocumentManager, renameDialog } from '@jupyterlab/docmanager';\nimport { DocumentWidget } from '@jupyterlab/docregistry';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { ITranslator, TranslationManager } from '@jupyterlab/translation';\nimport { RetroApp, RetroShell, IRetroShell } from '@retrolab/application';\nimport { jupyterIcon, retroInlineIcon } from '@retrolab/ui-components';\nimport { Widget } from '@lumino/widgets';\n/**\n * The default notebook factory.\n */\nconst NOTEBOOK_FACTORY = 'Notebook';\n/**\n * The editor factory.\n */\nconst EDITOR_FACTORY = 'Editor';\n/**\n * A regular expression to match path to notebooks and documents\n */\nconst TREE_PATTERN = new RegExp('/(notebooks|edit)/(.*)');\n/**\n * The command IDs used by the application plugin.\n */\nvar CommandIDs;\n(function (CommandIDs) {\n    /**\n     * Toggle Top Bar visibility\n     */\n    CommandIDs.toggleTop = 'application:toggle-top';\n    /**\n     * Toggle the Zen mode\n     */\n    CommandIDs.toggleZen = 'application:toggle-zen';\n    /**\n     * Open JupyterLab\n     */\n    CommandIDs.openLab = 'application:open-lab';\n    /**\n     * Open the tree page.\n     */\n    CommandIDs.openTree = 'application:open-tree';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * The logo plugin.\n */\nconst logo = {\n    id: '@retrolab/application-extension:logo',\n    autoStart: true,\n    activate: (app) => {\n        const baseUrl = PageConfig.getBaseUrl();\n        const node = document.createElement('a');\n        node.href = `${baseUrl}retro/tree`;\n        node.target = '_blank';\n        node.rel = 'noopener noreferrer';\n        const logo = new Widget({ node });\n        const retroLogo = PageConfig.getOption('retroLogo') === 'true';\n        const icon = retroLogo ? retroInlineIcon : jupyterIcon;\n        icon.element({\n            container: node,\n            elementPosition: 'center',\n            padding: '2px 2px 2px 8px',\n            height: '28px',\n            width: 'auto'\n        });\n        logo.id = 'jp-RetroLogo';\n        app.shell.add(logo, 'top', { rank: 0 });\n    }\n};\n/**\n * A plugin to open documents in the main area.\n */\nconst opener = {\n    id: '@retrolab/application-extension:opener',\n    autoStart: true,\n    requires: [IRouter, IDocumentManager],\n    activate: (app, router, docManager) => {\n        const { commands } = app;\n        const command = 'router:tree';\n        commands.addCommand(command, {\n            execute: (args) => {\n                var _a;\n                const parsed = args;\n                const matches = (_a = parsed.path.match(TREE_PATTERN)) !== null && _a !== void 0 ? _a : [];\n                const [, , path] = matches;\n                if (!path) {\n                    return;\n                }\n                const file = decodeURIComponent(path);\n                const ext = PathExt.extname(file);\n                app.restored.then(() => {\n                    // TODO: get factory from file type instead?\n                    if (ext === '.ipynb') {\n                        docManager.open(file, NOTEBOOK_FACTORY, undefined, {\n                            ref: '_noref'\n                        });\n                    }\n                    else {\n                        docManager.open(file, EDITOR_FACTORY, undefined, {\n                            ref: '_noref'\n                        });\n                    }\n                });\n            }\n        });\n        router.register({ command, pattern: TREE_PATTERN });\n    }\n};\n/**\n * A plugin to dispose the Tabs menu\n */\nconst noTabsMenu = {\n    id: '@retrolab/application-extension:no-tabs-menu',\n    requires: [IMainMenu],\n    autoStart: true,\n    activate: (app, menu) => {\n        menu.tabsMenu.dispose();\n    }\n};\n/**\n * Add commands to open the tree and running pages.\n */\nconst pages = {\n    id: '@retrolab/application-extension:pages',\n    autoStart: true,\n    optional: [ICommandPalette, IMainMenu],\n    activate: (app, palette, menu) => {\n        const baseUrl = PageConfig.getBaseUrl();\n        app.commands.addCommand(CommandIDs.openLab, {\n            label: 'Open JupyterLab',\n            execute: () => {\n                window.open(`${baseUrl}lab`);\n            }\n        });\n        app.commands.addCommand(CommandIDs.openTree, {\n            label: 'Open Files',\n            execute: () => {\n                window.open(`${baseUrl}retro/tree`);\n            }\n        });\n        if (palette) {\n            [CommandIDs.openLab, CommandIDs.openTree].forEach(command => {\n                palette.addItem({ command, category: 'View' });\n            });\n        }\n        if (menu) {\n            menu.viewMenu.addGroup([{ command: CommandIDs.openLab }, { command: CommandIDs.openTree }], 0);\n        }\n    }\n};\n/**\n * The default paths for a RetroLab app.\n */\nconst paths = {\n    id: '@retrolab/application-extension:paths',\n    autoStart: true,\n    provides: JupyterFrontEnd.IPaths,\n    activate: (app) => {\n        if (!(app instanceof RetroApp)) {\n            throw new Error(`${paths.id} must be activated in RetroLab.`);\n        }\n        return app.paths;\n    }\n};\n/**\n * The default URL router provider.\n */\nconst router = {\n    id: '@retrolab/application-extension:router',\n    autoStart: true,\n    provides: IRouter,\n    requires: [JupyterFrontEnd.IPaths],\n    activate: (app, paths) => {\n        const { commands } = app;\n        const base = paths.urls.base;\n        const router = new Router({ base, commands });\n        void app.started.then(() => {\n            // Route the very first request on load.\n            void router.route();\n            // Route all pop state events.\n            window.addEventListener('popstate', () => {\n                void router.route();\n            });\n        });\n        return router;\n    }\n};\n/**\n * The default session dialogs plugin\n */\nconst sessionDialogs = {\n    id: '@retrolab/application-extension:session-dialogs',\n    provides: ISessionContextDialogs,\n    autoStart: true,\n    activate: () => sessionContextDialogs\n};\n/**\n * The default RetroLab application shell.\n */\nconst shell = {\n    id: '@retrolab/application-extension:shell',\n    activate: (app) => {\n        if (!(app.shell instanceof RetroShell)) {\n            throw new Error(`${shell.id} did not find a RetroShell instance.`);\n        }\n        return app.shell;\n    },\n    autoStart: true,\n    provides: IRetroShell\n};\n/**\n * A plugin to provide a spacer at rank 10000 for flex panels\n */\nconst spacer = {\n    id: '@retrolab/application-extension:spacer',\n    autoStart: true,\n    activate: (app) => {\n        const top = new Widget();\n        top.id = DOMUtils.createDomID();\n        top.addClass('jp-RetroSpacer');\n        app.shell.add(top, 'top', { rank: 10000 });\n        const menu = new Widget();\n        menu.id = DOMUtils.createDomID();\n        menu.addClass('jp-RetroSpacer');\n        app.shell.add(menu, 'menu', { rank: 10000 });\n    }\n};\n/**\n * A plugin to display the document title in the browser tab title\n */\nconst tabTitle = {\n    id: '@retrolab/application-extension:tab-title',\n    autoStart: true,\n    requires: [IRetroShell],\n    activate: (app, shell) => {\n        const setTabTitle = () => {\n            const current = shell.currentWidget;\n            if (!(current instanceof DocumentWidget)) {\n                return;\n            }\n            const update = () => {\n                const basename = PathExt.basename(current.context.path);\n                document.title = basename;\n            };\n            current.context.pathChanged.connect(update);\n            update();\n        };\n        shell.currentChanged.connect(setTabTitle);\n        setTabTitle();\n    }\n};\n/**\n * A plugin to display and rename the title of a file\n */\nconst title = {\n    id: '@retrolab/application-extension:title',\n    autoStart: true,\n    requires: [IRetroShell],\n    optional: [IDocumentManager, IRouter],\n    activate: (app, shell, docManager, router) => {\n        const widget = new Widget();\n        widget.id = 'jp-title';\n        app.shell.add(widget, 'top', { rank: 10 });\n        const addTitle = async () => {\n            const current = shell.currentWidget;\n            if (!current || !(current instanceof DocumentWidget)) {\n                return;\n            }\n            if (widget.node.children.length > 0) {\n                return;\n            }\n            const h = document.createElement('h1');\n            h.textContent = current.title.label;\n            widget.node.appendChild(h);\n            widget.node.style.marginLeft = '10px';\n            if (!docManager) {\n                return;\n            }\n            widget.node.onclick = async () => {\n                var _a;\n                const result = await renameDialog(docManager, current.context.path);\n                // activate the current widget to bring the focus\n                if (current) {\n                    current.activate();\n                }\n                if (!result) {\n                    return;\n                }\n                const basename = PathExt.basename(result.path);\n                h.textContent = basename;\n                if (!router) {\n                    return;\n                }\n                const matches = (_a = router.current.path.match(TREE_PATTERN)) !== null && _a !== void 0 ? _a : [];\n                const [, route, path] = matches;\n                if (!route || !path) {\n                    return;\n                }\n                const encoded = encodeURIComponent(result.path);\n                router.navigate(`/retro/${route}/${encoded}`, {\n                    skipRouting: true\n                });\n            };\n        };\n        shell.currentChanged.connect(addTitle);\n        addTitle();\n    }\n};\n/**\n * Plugin to toggle the top header visibility.\n */\nconst topVisibility = {\n    id: '@retrolab/application-extension:top',\n    requires: [IRetroShell],\n    optional: [IMainMenu],\n    activate: (app, retroShell, menu) => {\n        const top = retroShell.top;\n        app.commands.addCommand(CommandIDs.toggleTop, {\n            label: 'Show Header',\n            execute: () => {\n                top.setHidden(top.isVisible);\n            },\n            isToggled: () => top.isVisible\n        });\n        if (menu) {\n            menu.viewMenu.addGroup([{ command: CommandIDs.toggleTop }], 2);\n        }\n        const onChanged = () => {\n            if (app.format === 'desktop') {\n                retroShell.expandTop();\n            }\n            else {\n                retroShell.collapseTop();\n            }\n        };\n        // listen on format change (mobile and desktop) to make the view more compact\n        app.formatChanged.connect(onChanged);\n        onChanged();\n    },\n    autoStart: true\n};\n/**\n * A simplified Translator\n */\nconst translator = {\n    id: '@retrolab/application-extension:translator',\n    activate: (app) => {\n        const translationManager = new TranslationManager();\n        return translationManager;\n    },\n    autoStart: true,\n    provides: ITranslator\n};\n/**\n * Zen mode plugin\n */\nconst zen = {\n    id: '@retrolab/application-extension:zen',\n    autoStart: true,\n    optional: [ICommandPalette, IRetroShell, IMainMenu],\n    activate: (app, palette, retroShell, menu) => {\n        const { commands } = app;\n        const elem = document.documentElement;\n        const toggleOn = () => {\n            retroShell === null || retroShell === void 0 ? void 0 : retroShell.collapseTop();\n            retroShell === null || retroShell === void 0 ? void 0 : retroShell.menu.setHidden(true);\n            zenModeEnabled = true;\n        };\n        const toggleOff = () => {\n            retroShell === null || retroShell === void 0 ? void 0 : retroShell.expandTop();\n            retroShell === null || retroShell === void 0 ? void 0 : retroShell.menu.setHidden(false);\n            zenModeEnabled = false;\n        };\n        let zenModeEnabled = false;\n        commands.addCommand(CommandIDs.toggleZen, {\n            label: 'Toggle Zen Mode',\n            execute: () => {\n                if (!zenModeEnabled) {\n                    elem.requestFullscreen();\n                    toggleOn();\n                }\n                else {\n                    document.exitFullscreen();\n                    toggleOff();\n                }\n            }\n        });\n        document.addEventListener('fullscreenchange', () => {\n            if (!document.fullscreenElement) {\n                toggleOff();\n            }\n        });\n        if (palette) {\n            palette.addItem({ command: CommandIDs.toggleZen, category: 'Mode' });\n        }\n        if (menu) {\n            menu.viewMenu.addGroup([{ command: CommandIDs.toggleZen }], 3);\n        }\n    }\n};\n/**\n * Export the plugins as default.\n */\nconst plugins = [\n    logo,\n    noTabsMenu,\n    opener,\n    pages,\n    paths,\n    router,\n    sessionDialogs,\n    shell,\n    spacer,\n    tabTitle,\n    title,\n    topVisibility,\n    translator,\n    zen\n];\nexport default plugins;\n"],"sourceRoot":""}