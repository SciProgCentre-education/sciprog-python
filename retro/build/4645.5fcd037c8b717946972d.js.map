{"version":3,"file":"4645.5fcd037c8b717946972d.js","mappings":"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","sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@retrolab/application/node_modules/@jupyterlab/docprovider/lib/awareness.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@retrolab/application/node_modules/@jupyterlab/docprovider/lib/mock.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@retrolab/application/node_modules/@jupyterlab/docprovider/lib/tokens.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../../node_modules/@retrolab/application/node_modules/@jupyterlab/docprovider/lib/yprovider.js"],"sourcesContent":["// From https://en.wikipedia.org/wiki/Moons_of_Jupiter\nexport const moonsOfJupyter = [\n    'Metis',\n    'Adrastea',\n    'Amalthea',\n    'Thebe',\n    'Io',\n    'Europa',\n    'Ganymede',\n    'Callisto',\n    'Themisto',\n    'Leda',\n    'Ersa',\n    'Pandia',\n    'Himalia',\n    'Lysithea',\n    'Elara',\n    'Dia',\n    'Carpo',\n    'Valetudo',\n    'Euporie',\n    'Eupheme',\n    // 'S/2003 J 18',\n    // 'S/2010 J 2',\n    'Helike',\n    // 'S/2003 J 16',\n    // 'S/2003 J 2',\n    'Euanthe',\n    // 'S/2017 J 7',\n    'Hermippe',\n    'Praxidike',\n    'Thyone',\n    'Thelxinoe',\n    // 'S/2017 J 3',\n    'Ananke',\n    'Mneme',\n    // 'S/2016 J 1',\n    'Orthosie',\n    'Harpalyke',\n    'Iocaste',\n    // 'S/2017 J 9',\n    // 'S/2003 J 12',\n    // 'S/2003 J 4',\n    'Erinome',\n    'Aitne',\n    'Herse',\n    'Taygete',\n    // 'S/2017 J 2',\n    // 'S/2017 J 6',\n    'Eukelade',\n    'Carme',\n    // 'S/2003 J 19',\n    'Isonoe',\n    // 'S/2003 J 10',\n    'Autonoe',\n    'Philophrosyne',\n    'Cyllene',\n    'Pasithee',\n    // 'S/2010 J 1',\n    'Pasiphae',\n    'Sponde',\n    // 'S/2017 J 8',\n    'Eurydome',\n    // 'S/2017 J 5',\n    'Kalyke',\n    'Hegemone',\n    'Kale',\n    'Kallichore',\n    // 'S/2011 J 1',\n    // 'S/2017 J 1',\n    'Chaldene',\n    'Arche',\n    'Eirene',\n    'Kore',\n    // 'S/2011 J 2',\n    // 'S/2003 J 9',\n    'Megaclite',\n    'Aoede',\n    // 'S/2003 J 23',\n    'Callirrhoe',\n    'Sinope'\n];\n/**\n * Get a random user-name based on the moons of Jupyter.\n * This function returns names like \"Anonymous Io\" or \"Anonymous Metis\".\n */\nexport const getAnonymousUserName = () => 'Anonymous ' +\n    moonsOfJupyter[Math.floor(Math.random() * moonsOfJupyter.length)];\nexport const userColors = [\n    '#12A0D3',\n    '#17AB30',\n    '#CC8500',\n    '#A79011',\n    '#ee6352',\n    '#609DA9',\n    '#4BA749',\n    '#00A1B3'\n];\nexport const getRandomColor = () => userColors[Math.floor(Math.random() * userColors.length)];\n//# sourceMappingURL=awareness.js.map","export class ProviderMock {\n    requestInitialContent() {\n        return Promise.resolve(false);\n    }\n    putInitializedState() {\n        /* nop */\n    }\n    acquireLock() {\n        return Promise.resolve(0);\n    }\n    releaseLock(lock) {\n        /* nop */\n    }\n    destroy() {\n        /* nop */\n    }\n    setPath(path) {\n        /* nop */\n    }\n}\n//# sourceMappingURL=mock.js.map","import { Token } from '@lumino/coreutils';\n/**\n * The default document provider token.\n */\nexport const IDocumentProviderFactory = new Token('@jupyterlab/docprovider:IDocumentProviderFactory');\n//# sourceMappingURL=tokens.js.map","/* -----------------------------------------------------------------------------\n| Copyright (c) Jupyter Development Team.\n| Distributed under the terms of the Modified BSD License.\n|----------------------------------------------------------------------------*/\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport * as decoding from 'lib0/decoding';\nimport * as encoding from 'lib0/encoding';\nimport { WebsocketProvider } from 'y-websocket';\nimport * as Y from 'yjs';\nimport { getAnonymousUserName, getRandomColor } from './awareness';\nimport * as env from 'lib0/environment';\n/**\n * A class to provide Yjs synchronization over WebSocket.\n *\n * The user can specify their own user-name and user-color by adding url parameters:\n *   ?username=Alice&usercolor=007007\n * where usercolor must be a six-digit hexadecimal encoded RGB value without the hash token.\n *\n * We specify custom messages that the server can interpret. For reference please look in yjs_ws_server.\n *\n */\nexport class WebSocketProviderWithLocks extends WebsocketProvider {\n    /**\n     * Construct a new WebSocketProviderWithLocks\n     *\n     * @param options The instantiation options for a WebSocketProviderWithLocks\n     */\n    constructor(options) {\n        var _a;\n        super(options.url, options.contentType + ':' + options.path, options.ymodel.ydoc, {\n            awareness: options.ymodel.awareness\n        });\n        this._currentLockRequest = null;\n        this._initialContentRequest = null;\n        this._path = options.path;\n        this._contentType = options.contentType;\n        this._serverUrl = options.url;\n        const color = '#' + env.getParam('--usercolor', getRandomColor().slice(1));\n        const name = env.getParam('--username', getAnonymousUserName());\n        const awareness = options.ymodel.awareness;\n        const currState = awareness.getLocalState();\n        // only set if this was not already set by another plugin\n        if (currState && ((_a = currState.user) === null || _a === void 0 ? void 0 : _a.name) == null) {\n            options.ymodel.awareness.setLocalStateField('user', {\n                name,\n                color\n            });\n        }\n        // Message handler that confirms when a lock has been acquired\n        this.messageHandlers[127] = (encoder, decoder, provider, emitSynced, messageType) => {\n            // acquired lock\n            const timestamp = decoding.readUint32(decoder);\n            const lockRequest = this._currentLockRequest;\n            this._currentLockRequest = null;\n            if (lockRequest) {\n                lockRequest.resolve(timestamp);\n            }\n        };\n        // Message handler that receives the initial content\n        this.messageHandlers[125] = (encoder, decoder, provider, emitSynced, messageType) => {\n            // received initial content\n            const initialContent = decoding.readTailAsUint8Array(decoder);\n            // Apply data from server\n            if (initialContent.byteLength > 0) {\n                setTimeout(() => {\n                    Y.applyUpdate(this.doc, initialContent);\n                }, 0);\n            }\n            const initialContentRequest = this._initialContentRequest;\n            this._initialContentRequest = null;\n            if (initialContentRequest) {\n                initialContentRequest.resolve(initialContent.byteLength > 0);\n            }\n        };\n        this._isInitialized = false;\n        this._onConnectionStatus = this._onConnectionStatus.bind(this);\n        this.on('status', this._onConnectionStatus);\n    }\n    setPath(newPath) {\n        if (newPath !== this._path) {\n            this._path = newPath;\n            // The next time the provider connects, we should connect through a different server url\n            this.bcChannel =\n                this._serverUrl + '/' + this._contentType + ':' + this._path;\n            this.url = this.bcChannel;\n            const encoder = encoding.createEncoder();\n            encoding.write(encoder, 123);\n            // writing a utf8 string to the encoder\n            const escapedPath = unescape(encodeURIComponent(this._contentType + ':' + newPath));\n            for (let i = 0; i < escapedPath.length; i++) {\n                encoding.write(encoder, \n                /** @type {number} */ escapedPath.codePointAt(i));\n            }\n            this._sendMessage(encoding.toUint8Array(encoder));\n        }\n    }\n    /**\n     * Resolves to true if the initial content has been initialized on the server. false otherwise.\n     */\n    requestInitialContent() {\n        if (this._initialContentRequest) {\n            return this._initialContentRequest.promise;\n        }\n        this._initialContentRequest = new PromiseDelegate();\n        this._sendMessage(new Uint8Array([125]));\n        // Resolve with true if the server doesn't respond for some reason.\n        // In case of a connection problem, we don't want the user to re-initialize the window.\n        // Instead wait for y-websocket to connect to the server.\n        // @todo maybe we should reload instead..\n        setTimeout(() => { var _a; return (_a = this._initialContentRequest) === null || _a === void 0 ? void 0 : _a.resolve(false); }, 1000);\n        return this._initialContentRequest.promise;\n    }\n    /**\n     * Put the initialized state.\n     */\n    putInitializedState() {\n        const encoder = encoding.createEncoder();\n        encoding.writeVarUint(encoder, 124);\n        encoding.writeUint8Array(encoder, Y.encodeStateAsUpdate(this.doc));\n        this._sendMessage(encoding.toUint8Array(encoder));\n        this._isInitialized = true;\n    }\n    /**\n     * Acquire a lock.\n     * Returns a Promise that resolves to the lock number.\n     */\n    acquireLock() {\n        if (this._currentLockRequest) {\n            return this._currentLockRequest.promise;\n        }\n        this._sendMessage(new Uint8Array([127]));\n        // try to acquire lock in regular interval\n        const intervalID = setInterval(() => {\n            if (this.wsconnected) {\n                // try to acquire lock\n                this._sendMessage(new Uint8Array([127]));\n            }\n        }, 500);\n        let resolve, reject;\n        const promise = new Promise((_resolve, _reject) => {\n            resolve = _resolve;\n            reject = _reject;\n        });\n        this._currentLockRequest = { promise, resolve, reject };\n        const _finally = () => {\n            clearInterval(intervalID);\n        };\n        promise.then(_finally, _finally);\n        return promise;\n    }\n    /**\n     * Release a lock.\n     *\n     * @param lock The lock to release.\n     */\n    releaseLock(lock) {\n        const encoder = encoding.createEncoder();\n        // reply with release lock\n        encoding.writeVarUint(encoder, 126);\n        encoding.writeUint32(encoder, lock);\n        // releasing lock\n        this._sendMessage(encoding.toUint8Array(encoder));\n    }\n    /**\n     * Send a new message to WebSocket server.\n     *\n     * @param message The message to send\n     */\n    _sendMessage(message) {\n        // send once connected\n        const send = () => {\n            setTimeout(() => {\n                if (this.wsconnected) {\n                    this.ws.send(message);\n                }\n                else {\n                    this.once('status', send);\n                }\n            }, 0);\n        };\n        send();\n    }\n    /**\n     * Handle a change to the connection status.\n     *\n     * @param status The connection status.\n     */\n    async _onConnectionStatus(status) {\n        if (this._isInitialized && status.status === 'connected') {\n            const lock = await this.acquireLock();\n            const contentIsInitialized = await this.requestInitialContent();\n            if (!contentIsInitialized) {\n                this.putInitializedState();\n            }\n            this.releaseLock(lock);\n        }\n    }\n}\n//# sourceMappingURL=yprovider.js.map"],"names":["moonsOfJupyter","getAnonymousUserName","Math","floor","random","length","userColors","getRandomColor","ProviderMock","requestInitialContent","Promise","resolve","putInitializedState","acquireLock","releaseLock","lock","destroy","setPath","path","IDocumentProviderFactory","Token","WebSocketProviderWithLocks","constructor","options","_a","super","url","contentType","ymodel","ydoc","awareness","this","_currentLockRequest","_initialContentRequest","_path","_contentType","_serverUrl","color","slice","name","currState","getLocalState","user","setLocalStateField","messageHandlers","encoder","decoder","provider","emitSynced","messageType","timestamp","decoding","lockRequest","initialContent","byteLength","setTimeout","doc","initialContentRequest","_isInitialized","_onConnectionStatus","bind","on","newPath","bcChannel","encoding","escapedPath","unescape","encodeURIComponent","i","codePointAt","_sendMessage","PromiseDelegate","Uint8Array","promise","intervalID","setInterval","wsconnected","reject","_resolve","_reject","_finally","clearInterval","then","message","send","ws","once","status"],"sourceRoot":""}