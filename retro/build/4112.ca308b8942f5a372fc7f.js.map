{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@retrolab/application/node_modules/@jupyterlab/statusbar/lib/style/progressBar.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@retrolab/application/node_modules/@jupyterlab/statusbar/lib/components/progressBar.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@retrolab/application/node_modules/@jupyterlab/statusbar/lib/style/variables.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@retrolab/application/node_modules/@jupyterlab/statusbar/lib/style/text.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@retrolab/application/node_modules/@jupyterlab/statusbar/lib/components/text.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@retrolab/application/node_modules/@jupyterlab/statusbar/lib/style/layout.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@retrolab/application/node_modules/@jupyterlab/statusbar/lib/components/group.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@retrolab/application/node_modules/@jupyterlab/statusbar/lib/style/statusbar.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@retrolab/application/node_modules/@jupyterlab/statusbar/lib/components/hover.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@retrolab/application/node_modules/@jupyterlab/statusbar/lib/style/lineForm.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@retrolab/application/node_modules/@jupyterlab/statusbar/lib/defaults/lineCol.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@retrolab/application/node_modules/@jupyterlab/statusbar/lib/defaults/kernelStatus.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@retrolab/application/node_modules/@jupyterlab/statusbar/lib/defaults/runningSessions.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@retrolab/application/node_modules/@jupyterlab/statusbar/lib/statusbar.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@retrolab/application/node_modules/@jupyterlab/statusbar/lib/tokens.js"],"names":["progressBarItem","background","height","width","border","borderRadius","marginLeft","overflow","fillerItem","ProgressBar","props","className","Filler","percentage","style","textItem","fontSize","fontFamily","lineHeight","color","TextItem","title","source","rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__rest","assign","centeredFlex","display","alignItems","leftToRight","flexDirection","groupItemLayout","GroupItem","spacing","children","numChildren","child","marginRight","margin","itemPadding","paddingLeft","paddingRight","interactiveHover","$nest","backgroundColor","clicked","statusBar","minHeight","justifyContent","side","leftSide","rightSide","maxHeight","whiteSpace","textOverflow","clickedItem","interactiveItem","hoverItem","boxShadow","showPopup","options","dialog","Popup","launch","Widget","super","this","_body","body","addClass","_anchor","anchor","_align","align","layout","PanelLayout","addWidget","node","addEventListener","update","_setGeometry","document","removeClass","msg","onUpdateRequest","window","removeEventListener","dispose","event","type","_evtKeydown","_evtClick","onResize","target","contains","keyCode","stopPropagation","preventDefault","aligned","anchorRect","getBoundingClientRect","bodyRect","getComputedStyle","HoverBox","host","offset","horizontal","privilege","lineFormSearch","padding","zIndex","lineFormCaption","marginTop","baseLineForm","position","backgroundSize","backgroundRepeat","backgroundPosition","outline","top","right","lineFormButtonDiv","lineFormButtonIcon","boxSizing","lineFormButton","lineFormWrapper","lineFormWrapperFocusWithin","lineFormInput","LineFormComponent","_handleChange","setState","value","currentTarget","_handleSubmit","parseInt","_textInput","isNaN","isFinite","maxLine","handleSubmit","_handleFocus","hasFocus","_handleBlur","translator","nullTranslator","_trans","load","state","focus","name","onSubmit","noValidate","undefined","onChange","onFocus","onBlur","ref","input","lineFormIcon","elementPosition","__","LineColComponent","trans","onClick","handleClick","line","column","LineCol","VDomRenderer","Model","_popup","model","_handleClick","ReactWidget","val","currentLine","editor","lineCount","setCursorPosition","VDomModel","arguments","_onSelectionChanged","oldState","_getAllState","pos","getCursorPosition","_line","_column","_triggerChange","_editor","oldEditor","selections","changed","disconnect","connect","newState","stateChanged","emit","KernelStatusComponent","statusText","status","Text","kernelName","activityName","KernelStatus","opts","RunningSessionsComponent","terminals","terminalIcon","left","stylesheet","sessions","kernelIcon","_onKernelStatusChanged","_a","_kernelStatus","_sessionContext","kernelDisplayStatus","_onKernelChanged","change","_kernelName","kernelDisplayName","_activityName","sessionContext","_b","_c","statusChanged","kernelChanged","connectionStatusChanged","JSONExt","RunningSessions","_serviceManager","serviceManager","runningChanged","_onSessionsRunningChanged","_onTerminalsRunningChanged","caption","manager","_terminals","_sessions","oldSessions","oldTerminals","Private","StatusBar","_leftRankItems","_rightRankItems","_statusItems","_disposables","DisposableSet","rootLayout","leftPanel","_leftSide","Panel","middlePanel","_middlePanel","rightPanel","_rightSide","id","statusItem","Error","fullStatusItem","statusItemDefaults","item","rank","onActiveStateChanged","_refreshItem","activeStateChanged","rankItem","insertIndex","_findInsertIndex","push","ArrayExt","insertWidget","disposable","DisposableDelegate","parent","add","_refreshAll","newItem","isActive","show","hide","keys","forEach","IStatusBar","Token"],"mappings":"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","file":"4112.ca308b8942f5a372fc7f.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { style } from 'typestyle/lib';\nexport const progressBarItem = style({\n    background: 'black',\n    height: '10px',\n    width: '100px',\n    border: '1px solid black',\n    borderRadius: '3px',\n    marginLeft: '4px',\n    overflow: 'hidden'\n});\nexport const fillerItem = style({\n    background: 'var(--jp-brand-color2)',\n    height: '10px'\n});\n//# sourceMappingURL=progressBar.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport * as React from 'react';\nimport { progressBarItem, fillerItem } from '../style/progressBar';\n/**\n * A functional tsx component for a progress bar.\n */\nexport function ProgressBar(props) {\n    return (React.createElement(\"div\", { className: progressBarItem },\n        React.createElement(Filler, { percentage: props.percentage })));\n}\n/**\n * A functional tsx component for a partially filled div.\n */\nfunction Filler(props) {\n    return (React.createElement(\"div\", { className: fillerItem, style: {\n            width: `${props.percentage}px`\n        } }));\n}\n//# sourceMappingURL=progressBar.js.map","export default {\n    hoverColor: 'var(--jp-layout-color3)',\n    clickColor: 'var(--jp-brand-color1)',\n    backgroundColor: 'var(--jp-layout-color2)',\n    height: '24px',\n    fontSize: 'var(--jp-ui-font-size1)',\n    fontFamily: 'var(--jp-ui-font-family)',\n    textColor: 'var(--jp-ui-font-color1)',\n    textClickColor: 'white',\n    itemMargin: '2px',\n    itemPadding: '6px',\n    statusBarPadding: '10px',\n    interItemHalfSpacing: '2px',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis'\n};\n//# sourceMappingURL=variables.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport vars from './variables';\nimport { style } from 'typestyle/lib';\nexport const baseText = {\n    fontSize: vars.fontSize,\n    fontFamily: vars.fontFamily\n};\nexport const textItem = style(baseText, {\n    lineHeight: '24px',\n    color: vars.textColor\n});\n//# sourceMappingURL=text.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { classes } from 'typestyle/lib';\nimport { textItem } from '../style/text';\n/**\n * A functional tsx component for a text item.\n */\nexport function TextItem(props) {\n    const { title, source, className } = props, rest = __rest(props, [\"title\", \"source\", \"className\"]);\n    return (React.createElement(\"span\", Object.assign({ className: classes(textItem, className), title: title }, rest), source));\n}\n//# sourceMappingURL=text.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nexport const centeredFlex = {\n    display: 'flex',\n    alignItems: 'center'\n};\nexport const leftToRight = {\n    flexDirection: 'row'\n};\nexport const rightToLeft = {\n    flexDirection: 'row-reverse'\n};\nexport const equiDistant = {\n    justifyContent: 'space-between'\n};\n//# sourceMappingURL=layout.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { style, classes } from 'typestyle/lib';\nimport { centeredFlex, leftToRight } from '../style/layout';\nconst groupItemLayout = style(centeredFlex, leftToRight);\n/**\n * A tsx component for a set of items logically grouped together.\n */\nexport function GroupItem(props) {\n    const { spacing, children, className } = props, rest = __rest(props, [\"spacing\", \"children\", \"className\"]);\n    const numChildren = React.Children.count(children);\n    return (React.createElement(\"div\", Object.assign({ className: classes(groupItemLayout, className) }, rest), React.Children.map(children, (child, i) => {\n        if (i === 0) {\n            return React.createElement(\"div\", { style: { marginRight: `${spacing}px` } }, child);\n        }\n        else if (i === numChildren - 1) {\n            return React.createElement(\"div\", { style: { marginLeft: `${spacing}px` } }, child);\n        }\n        else {\n            return React.createElement(\"div\", { style: { margin: `0px ${spacing}px` } }, child);\n        }\n    })));\n}\n//# sourceMappingURL=group.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { textItem } from './text';\nimport { style } from 'typestyle/lib';\nimport vars from './variables';\nimport { rightToLeft, leftToRight, centeredFlex } from './layout';\nconst itemPadding = {\n    paddingLeft: vars.itemPadding,\n    paddingRight: vars.itemPadding\n};\nconst interactiveHover = {\n    $nest: {\n        '&:hover': {\n            backgroundColor: vars.hoverColor\n        }\n    }\n};\nconst clicked = {\n    backgroundColor: vars.clickColor,\n    $nest: {\n        ['.' + textItem]: {\n            color: vars.textClickColor\n        }\n    }\n};\nexport const statusBar = style({\n    background: vars.backgroundColor,\n    minHeight: vars.height,\n    justifyContent: 'space-between',\n    paddingLeft: vars.statusBarPadding,\n    paddingRight: vars.statusBarPadding\n}, centeredFlex);\nexport const side = style(centeredFlex);\nexport const leftSide = style(leftToRight);\nexport const rightSide = style(rightToLeft);\nexport const item = style({\n    maxHeight: vars.height,\n    marginLeft: vars.itemMargin,\n    marginRight: vars.itemMargin,\n    height: vars.height,\n    whiteSpace: vars.whiteSpace,\n    textOverflow: vars.textOverflow,\n    color: vars.textColor\n}, itemPadding);\nexport const clickedItem = style(clicked);\nexport const interactiveItem = style(interactiveHover);\n//# sourceMappingURL=statusbar.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { HoverBox } from '@jupyterlab/apputils';\nimport { Widget, PanelLayout } from '@lumino/widgets';\nimport { style } from 'typestyle/lib';\nimport { clickedItem, interactiveItem } from '../style/statusbar';\nconst hoverItem = style({\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n});\n/**\n * Create and show a popup component.\n *\n * @param options - options for the popup\n *\n * @returns the popup that was created.\n */\nexport function showPopup(options) {\n    const dialog = new Popup(options);\n    dialog.launch();\n    return dialog;\n}\n/**\n * A class for a Popup widget.\n */\nexport class Popup extends Widget {\n    /**\n     * Construct a new Popup.\n     */\n    constructor(options) {\n        super();\n        this._body = options.body;\n        this._body.addClass(hoverItem);\n        this._anchor = options.anchor;\n        this._align = options.align;\n        const layout = (this.layout = new PanelLayout());\n        layout.addWidget(options.body);\n        this._body.node.addEventListener('resize', () => {\n            this.update();\n        });\n    }\n    /**\n     * Attach the popup widget to the page.\n     */\n    launch() {\n        this._setGeometry();\n        Widget.attach(this, document.body);\n        this.update();\n        this._anchor.addClass(clickedItem);\n        this._anchor.removeClass(interactiveItem);\n    }\n    /**\n     * Handle `'update'` messages for the widget.\n     */\n    onUpdateRequest(msg) {\n        this._setGeometry();\n        super.onUpdateRequest(msg);\n    }\n    /**\n     * Handle `'after-attach'` messages for the widget.\n     */\n    onAfterAttach(msg) {\n        document.addEventListener('click', this, false);\n        this.node.addEventListener('keydown', this, false);\n        window.addEventListener('resize', this, false);\n    }\n    /**\n     * Handle `'after-detach'` messages for the widget.\n     */\n    onAfterDetach(msg) {\n        document.removeEventListener('click', this, false);\n        this.node.removeEventListener('keydown', this, false);\n        window.removeEventListener('resize', this, false);\n    }\n    /**\n     * Handle `'resize'` messages for the widget.\n     */\n    onResize() {\n        this.update();\n    }\n    /**\n     * Dispose of the widget.\n     */\n    dispose() {\n        super.dispose();\n        this._anchor.removeClass(clickedItem);\n        this._anchor.addClass(interactiveItem);\n    }\n    /**\n     * Handle DOM events for the widget.\n     */\n    handleEvent(event) {\n        switch (event.type) {\n            case 'keydown':\n                this._evtKeydown(event);\n                break;\n            case 'click':\n                this._evtClick(event);\n                break;\n            case 'resize':\n                this.onResize();\n                break;\n            default:\n                break;\n        }\n    }\n    _evtClick(event) {\n        if (!!event.target &&\n            !(this._body.node.contains(event.target) ||\n                this._anchor.node.contains(event.target))) {\n            this.dispose();\n        }\n    }\n    _evtKeydown(event) {\n        // Check for escape key\n        switch (event.keyCode) {\n            case 27: // Escape.\n                event.stopPropagation();\n                event.preventDefault();\n                this.dispose();\n                break;\n            default:\n                break;\n        }\n    }\n    _setGeometry() {\n        let aligned = 0;\n        const anchorRect = this._anchor.node.getBoundingClientRect();\n        const bodyRect = this._body.node.getBoundingClientRect();\n        if (this._align === 'right') {\n            aligned = -(bodyRect.width - anchorRect.width);\n        }\n        const style = window.getComputedStyle(this._body.node);\n        HoverBox.setGeometry({\n            anchor: anchorRect,\n            host: document.body,\n            maxHeight: 500,\n            minHeight: 20,\n            node: this._body.node,\n            offset: {\n                horizontal: aligned\n            },\n            privilege: 'forceAbove',\n            style\n        });\n    }\n}\n//# sourceMappingURL=hover.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { style } from 'typestyle/lib';\nexport const hoverItem = style({\n    boxShadow: '0px 4px 4px rgba(0, 0, 0, 0.25)'\n});\nexport const lineFormSearch = style({\n    padding: '4px 12px',\n    backgroundColor: 'var(--jp-layout-color2)',\n    boxShadow: 'var(--jp-toolbar-box-shadow)',\n    zIndex: 2,\n    fontSize: 'var(--jp-ui-font-size1)'\n});\nexport const lineFormCaption = style({\n    fontSize: 'var(--jp-ui-font-size0)',\n    lineHeight: 'var(--jp-ui-font-size1)',\n    marginTop: '4px',\n    color: 'var(--jp-ui-font-color0)'\n});\nexport const baseLineForm = {\n    border: 'none',\n    borderRadius: '0px',\n    position: 'absolute',\n    backgroundSize: '16px',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    outline: 'none',\n    top: '0px',\n    right: '0px'\n};\nexport const lineFormButtonDiv = style(baseLineForm, {\n    top: '4px',\n    right: '8px',\n    height: '24px',\n    padding: '0px 12px',\n    width: '12px'\n});\nexport const lineFormButtonIcon = style(baseLineForm, {\n    backgroundColor: 'var(--jp-brand-color1)',\n    height: '100%',\n    width: '100%',\n    boxSizing: 'border-box',\n    padding: '4px 6px'\n});\nexport const lineFormButton = style(baseLineForm, {\n    backgroundColor: 'transparent',\n    height: '100%',\n    width: '100%',\n    boxSizing: 'border-box'\n});\nexport const lineFormWrapper = style({\n    overflow: 'hidden',\n    padding: '0px 8px',\n    border: '1px solid var(--jp-border-color0)',\n    backgroundColor: 'var(--jp-input-active-background)',\n    height: '22px'\n});\nexport const lineFormWrapperFocusWithin = style({\n    border: 'var(--jp-border-width) solid var(--md-blue-500)',\n    boxShadow: 'inset 0 0 4px var(--md-blue-300)'\n});\nexport const lineFormInput = style({\n    background: 'transparent',\n    width: '200px',\n    height: '100%',\n    border: 'none',\n    outline: 'none',\n    color: 'var(--jp-ui-font-color0)',\n    lineHeight: '28px'\n});\n//# sourceMappingURL=lineForm.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport React from 'react';\nimport { VDomRenderer, VDomModel, ReactWidget } from '@jupyterlab/apputils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { lineFormIcon } from '@jupyterlab/ui-components';\nimport { classes } from 'typestyle/lib';\nimport { interactiveItem, showPopup, TextItem } from '..';\nimport { lineFormWrapper, lineFormInput, lineFormSearch, lineFormWrapperFocusWithin, lineFormCaption, lineFormButtonDiv, lineFormButtonIcon, lineFormButton } from '../style/lineForm';\n/**\n * A component for rendering a \"go-to-line\" form.\n */\nclass LineFormComponent extends React.Component {\n    /**\n     * Construct a new LineFormComponent.\n     */\n    constructor(props) {\n        super(props);\n        /**\n         * Handle a change to the value in the input field.\n         */\n        this._handleChange = (event) => {\n            this.setState({ value: event.currentTarget.value });\n        };\n        /**\n         * Handle submission of the input field.\n         */\n        this._handleSubmit = (event) => {\n            event.preventDefault();\n            const value = parseInt(this._textInput.value, 10);\n            if (!isNaN(value) &&\n                isFinite(value) &&\n                1 <= value &&\n                value <= this.props.maxLine) {\n                this.props.handleSubmit(value);\n            }\n            return false;\n        };\n        /**\n         * Handle focusing of the input field.\n         */\n        this._handleFocus = () => {\n            this.setState({ hasFocus: true });\n        };\n        /**\n         * Handle blurring of the input field.\n         */\n        this._handleBlur = () => {\n            this.setState({ hasFocus: false });\n        };\n        this._textInput = null;\n        this.translator = props.translator || nullTranslator;\n        this._trans = this.translator.load('jupyterlab');\n        this.state = {\n            value: '',\n            hasFocus: false\n        };\n    }\n    /**\n     * Focus the element on mount.\n     */\n    componentDidMount() {\n        this._textInput.focus();\n    }\n    /**\n     * Render the LineFormComponent.\n     */\n    render() {\n        return (React.createElement(\"div\", { className: lineFormSearch },\n            React.createElement(\"form\", { name: \"lineColumnForm\", onSubmit: this._handleSubmit, noValidate: true },\n                React.createElement(\"div\", { className: classes(lineFormWrapper, 'lm-lineForm-wrapper', this.state.hasFocus ? lineFormWrapperFocusWithin : undefined) },\n                    React.createElement(\"input\", { type: \"text\", className: lineFormInput, onChange: this._handleChange, onFocus: this._handleFocus, onBlur: this._handleBlur, value: this.state.value, ref: input => {\n                            this._textInput = input;\n                        } }),\n                    React.createElement(\"div\", { className: lineFormButtonDiv },\n                        React.createElement(lineFormIcon.react, { className: lineFormButtonIcon, elementPosition: \"center\" }),\n                        React.createElement(\"input\", { type: \"submit\", className: lineFormButton, value: \"\" }))),\n                React.createElement(\"label\", { className: lineFormCaption }, this._trans.__('Go to line number between 1 and %1', this.props.maxLine)))));\n    }\n}\n/**\n * A pure functional component for rendering a line/column\n * status item.\n */\nfunction LineColComponent(props) {\n    const translator = props.translator || nullTranslator;\n    const trans = translator.load('jupyterlab');\n    return (React.createElement(TextItem, { onClick: props.handleClick, source: trans.__('Ln %1, Col %2', props.line, props.column), title: trans.__('Go to line number…') }));\n}\n/**\n * A widget implementing a line/column status item.\n */\nexport class LineCol extends VDomRenderer {\n    /**\n     * Construct a new LineCol status item.\n     */\n    constructor(translator) {\n        super(new LineCol.Model());\n        this._popup = null;\n        this.addClass(interactiveItem);\n        this.translator = translator || nullTranslator;\n    }\n    /**\n     * Render the status item.\n     */\n    render() {\n        if (this.model === null) {\n            return null;\n        }\n        else {\n            return (React.createElement(LineColComponent, { line: this.model.line, column: this.model.column, translator: this.translator, handleClick: () => this._handleClick() }));\n        }\n    }\n    /**\n     * A click handler for the widget.\n     */\n    _handleClick() {\n        if (this._popup) {\n            this._popup.dispose();\n        }\n        const body = ReactWidget.create(React.createElement(LineFormComponent, { handleSubmit: val => this._handleSubmit(val), currentLine: this.model.line, maxLine: this.model.editor.lineCount, translator: this.translator }));\n        this._popup = showPopup({\n            body: body,\n            anchor: this,\n            align: 'right'\n        });\n    }\n    /**\n     * Handle submission for the widget.\n     */\n    _handleSubmit(value) {\n        this.model.editor.setCursorPosition({ line: value - 1, column: 0 });\n        this._popup.dispose();\n        this.model.editor.focus();\n    }\n}\n/**\n * A namespace for LineCol statics.\n */\n(function (LineCol) {\n    /**\n     * A VDom model for a status item tracking the line/column of an editor.\n     */\n    class Model extends VDomModel {\n        constructor() {\n            super(...arguments);\n            /**\n             * React to a change in the cursors of the current editor.\n             */\n            this._onSelectionChanged = () => {\n                const oldState = this._getAllState();\n                const pos = this.editor.getCursorPosition();\n                this._line = pos.line + 1;\n                this._column = pos.column + 1;\n                this._triggerChange(oldState, this._getAllState());\n            };\n            this._line = 1;\n            this._column = 1;\n            this._editor = null;\n        }\n        /**\n         * The current editor of the model.\n         */\n        get editor() {\n            return this._editor;\n        }\n        set editor(editor) {\n            const oldEditor = this._editor;\n            if (oldEditor) {\n                oldEditor.model.selections.changed.disconnect(this._onSelectionChanged);\n            }\n            const oldState = this._getAllState();\n            this._editor = editor;\n            if (!this._editor) {\n                this._column = 1;\n                this._line = 1;\n            }\n            else {\n                this._editor.model.selections.changed.connect(this._onSelectionChanged);\n                const pos = this._editor.getCursorPosition();\n                this._column = pos.column + 1;\n                this._line = pos.line + 1;\n            }\n            this._triggerChange(oldState, this._getAllState());\n        }\n        /**\n         * The current line of the model.\n         */\n        get line() {\n            return this._line;\n        }\n        /**\n         * The current column of the model.\n         */\n        get column() {\n            return this._column;\n        }\n        _getAllState() {\n            return [this._line, this._column];\n        }\n        _triggerChange(oldState, newState) {\n            if (oldState[0] !== newState[0] || oldState[1] !== newState[1]) {\n                this.stateChanged.emit(void 0);\n            }\n        }\n    }\n    LineCol.Model = Model;\n})(LineCol || (LineCol = {}));\n//# sourceMappingURL=lineCol.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport React from 'react';\nimport { VDomRenderer, VDomModel } from '@jupyterlab/apputils';\nimport { Text } from '@jupyterlab/coreutils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { interactiveItem, TextItem } from '..';\nimport { JSONExt } from '@lumino/coreutils';\n/**\n * A pure functional component for rendering kernel status.\n */\nfunction KernelStatusComponent(props) {\n    const translator = props.translator || nullTranslator;\n    const trans = translator.load('jupyterlab');\n    let statusText = '';\n    if (props.status) {\n        statusText = ` | ${Text.titleCase(trans.__(props.status))}`;\n    }\n    return (React.createElement(TextItem, { onClick: props.handleClick, source: `${props.kernelName}${statusText}`, title: trans.__('Change kernel for %1', props.activityName) }));\n}\n/**\n * A VDomRenderer widget for displaying the status of a kernel.\n */\nexport class KernelStatus extends VDomRenderer {\n    /**\n     * Construct the kernel status widget.\n     */\n    constructor(opts, translator) {\n        super(new KernelStatus.Model(translator));\n        this.translator = translator || nullTranslator;\n        this._handleClick = opts.onClick;\n        this.addClass(interactiveItem);\n    }\n    /**\n     * Render the kernel status item.\n     */\n    render() {\n        if (this.model === null) {\n            return null;\n        }\n        else {\n            return (React.createElement(KernelStatusComponent, { status: this.model.status, kernelName: this.model.kernelName, activityName: this.model.activityName, handleClick: this._handleClick, translator: this.translator }));\n        }\n    }\n}\n/**\n * A namespace for KernelStatus statics.\n */\n(function (KernelStatus) {\n    /**\n     * A VDomModel for the kernel status indicator.\n     */\n    class Model extends VDomModel {\n        constructor(translator) {\n            super();\n            /**\n             * React to changes to the kernel status.\n             */\n            this._onKernelStatusChanged = () => {\n                var _a;\n                this._kernelStatus = (_a = this._sessionContext) === null || _a === void 0 ? void 0 : _a.kernelDisplayStatus;\n                this.stateChanged.emit(void 0);\n            };\n            /**\n             * React to changes in the kernel.\n             */\n            this._onKernelChanged = (_sessionContext, change) => {\n                var _a;\n                const oldState = this._getAllState();\n                // sync setting of status and display name\n                this._kernelStatus = (_a = this._sessionContext) === null || _a === void 0 ? void 0 : _a.kernelDisplayStatus;\n                this._kernelName = _sessionContext.kernelDisplayName;\n                this._triggerChange(oldState, this._getAllState());\n            };\n            this._activityName = 'activity'; // FIXME-TRANS:?\n            this._kernelStatus = '';\n            this._sessionContext = null;\n            translator = translator || nullTranslator;\n            this._trans = translator.load('jupyterlab');\n            this._kernelName = this._trans.__('No Kernel!');\n        }\n        /**\n         * The name of the kernel.\n         */\n        get kernelName() {\n            return this._kernelName;\n        }\n        /**\n         * The current status of the kernel.\n         */\n        get status() {\n            return this._kernelStatus;\n        }\n        /**\n         * A display name for the activity.\n         */\n        get activityName() {\n            return this._activityName;\n        }\n        set activityName(val) {\n            const oldVal = this._activityName;\n            if (oldVal === val) {\n                return;\n            }\n            this._activityName = val;\n            this.stateChanged.emit(void 0);\n        }\n        /**\n         * The current client session associated with the kernel status indicator.\n         */\n        get sessionContext() {\n            return this._sessionContext;\n        }\n        set sessionContext(sessionContext) {\n            var _a, _b, _c;\n            (_a = this._sessionContext) === null || _a === void 0 ? void 0 : _a.statusChanged.disconnect(this._onKernelStatusChanged);\n            (_b = this._sessionContext) === null || _b === void 0 ? void 0 : _b.kernelChanged.disconnect(this._onKernelChanged);\n            const oldState = this._getAllState();\n            this._sessionContext = sessionContext;\n            this._kernelStatus = sessionContext === null || sessionContext === void 0 ? void 0 : sessionContext.kernelDisplayStatus;\n            this._kernelName = (_c = sessionContext === null || sessionContext === void 0 ? void 0 : sessionContext.kernelDisplayName) !== null && _c !== void 0 ? _c : 'No Kernel'; // FIXME-TRANS: ?\n            sessionContext === null || sessionContext === void 0 ? void 0 : sessionContext.statusChanged.connect(this._onKernelStatusChanged, this);\n            sessionContext === null || sessionContext === void 0 ? void 0 : sessionContext.connectionStatusChanged.connect(this._onKernelStatusChanged, this);\n            sessionContext === null || sessionContext === void 0 ? void 0 : sessionContext.kernelChanged.connect(this._onKernelChanged, this);\n            this._triggerChange(oldState, this._getAllState());\n        }\n        _getAllState() {\n            return [this._kernelName, this._kernelStatus, this._activityName];\n        }\n        _triggerChange(oldState, newState) {\n            if (JSONExt.deepEqual(oldState, newState)) {\n                this.stateChanged.emit(void 0);\n            }\n        }\n    }\n    KernelStatus.Model = Model;\n})(KernelStatus || (KernelStatus = {}));\n//# sourceMappingURL=kernelStatus.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport React from 'react';\nimport { VDomRenderer, VDomModel } from '@jupyterlab/apputils';\nimport { nullTranslator } from '@jupyterlab/translation';\nimport { kernelIcon, terminalIcon } from '@jupyterlab/ui-components';\nimport { GroupItem, interactiveItem, TextItem } from '..';\n/**\n * Half spacing between subitems in a status item.\n */\nconst HALF_SPACING = 4;\n/**\n * A pure functional component for rendering kernel and terminal sessions.\n *\n * @param props: the props for the component.\n *\n * @returns a tsx component for the running sessions.\n */\nfunction RunningSessionsComponent(props) {\n    return (React.createElement(GroupItem, { spacing: HALF_SPACING, onClick: props.handleClick },\n        React.createElement(GroupItem, { spacing: HALF_SPACING },\n            React.createElement(TextItem, { source: props.terminals }),\n            React.createElement(terminalIcon.react, { left: '1px', top: '3px', stylesheet: 'statusBar' })),\n        React.createElement(GroupItem, { spacing: HALF_SPACING },\n            React.createElement(TextItem, { source: props.sessions }),\n            React.createElement(kernelIcon.react, { top: '2px', stylesheet: 'statusBar' }))));\n}\n/**\n * A VDomRenderer for a RunningSessions status item.\n */\nexport class RunningSessions extends VDomRenderer {\n    /**\n     * Create a new RunningSessions widget.\n     */\n    constructor(opts) {\n        super(new RunningSessions.Model());\n        this._serviceManager = opts.serviceManager;\n        this._handleClick = opts.onClick;\n        this.translator = opts.translator || nullTranslator;\n        this._trans = this.translator.load('jupyterload');\n        this._serviceManager.sessions.runningChanged.connect(this._onSessionsRunningChanged, this);\n        this._serviceManager.terminals.runningChanged.connect(this._onTerminalsRunningChanged, this);\n        this.addClass(interactiveItem);\n    }\n    /**\n     * Render the running sessions widget.\n     */\n    render() {\n        if (!this.model) {\n            return null;\n        }\n        // TODO-TRANS: Should probably be handled differently.\n        // This is more localizable friendly: \"Terminals: %1 | Kernels: %2\"\n        this.title.caption = this._trans.__('%1 Terminals, %2 Kernel sessions', this.model.terminals, this.model.sessions);\n        return (React.createElement(RunningSessionsComponent, { sessions: this.model.sessions, terminals: this.model.terminals, handleClick: this._handleClick }));\n    }\n    /**\n     * Dispose of the status item.\n     */\n    dispose() {\n        super.dispose();\n        this._serviceManager.sessions.runningChanged.disconnect(this._onSessionsRunningChanged, this);\n        this._serviceManager.terminals.runningChanged.disconnect(this._onTerminalsRunningChanged, this);\n    }\n    /**\n     * Set the number of kernel sessions when the list changes.\n     */\n    _onSessionsRunningChanged(manager, sessions) {\n        this.model.sessions = sessions.length;\n    }\n    /**\n     * Set the number of terminal sessions when the list changes.\n     */\n    _onTerminalsRunningChanged(manager, terminals) {\n        this.model.terminals = terminals.length;\n    }\n}\n/**\n * A namespace for RunninSessions statics.\n */\n(function (RunningSessions) {\n    /**\n     * A VDomModel for the RunninSessions status item.\n     */\n    class Model extends VDomModel {\n        constructor() {\n            super(...arguments);\n            this._terminals = 0;\n            this._sessions = 0;\n        }\n        /**\n         * The number of active kernel sessions.\n         */\n        get sessions() {\n            return this._sessions;\n        }\n        set sessions(sessions) {\n            const oldSessions = this._sessions;\n            this._sessions = sessions;\n            if (oldSessions !== this._sessions) {\n                this.stateChanged.emit(void 0);\n            }\n        }\n        /**\n         * The number of active terminal sessions.\n         */\n        get terminals() {\n            return this._terminals;\n        }\n        set terminals(terminals) {\n            const oldTerminals = this._terminals;\n            this._terminals = terminals;\n            if (oldTerminals !== this._terminals) {\n                this.stateChanged.emit(void 0);\n            }\n        }\n    }\n    RunningSessions.Model = Model;\n})(RunningSessions || (RunningSessions = {}));\n//# sourceMappingURL=runningSessions.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { ArrayExt } from '@lumino/algorithm';\nimport { DisposableDelegate, DisposableSet } from '@lumino/disposable';\nimport { Widget, Panel, PanelLayout } from '@lumino/widgets';\nimport { statusBar as barStyle, side as sideStyle, item as itemStyle, leftSide as leftSideStyle, rightSide as rightSideStyle } from './style/statusbar';\n/**\n * Main status bar object which contains all items.\n */\nexport class StatusBar extends Widget {\n    constructor() {\n        super();\n        this._leftRankItems = [];\n        this._rightRankItems = [];\n        this._statusItems = {};\n        this._disposables = new DisposableSet();\n        this.addClass(barStyle);\n        const rootLayout = (this.layout = new PanelLayout());\n        const leftPanel = (this._leftSide = new Panel());\n        const middlePanel = (this._middlePanel = new Panel());\n        const rightPanel = (this._rightSide = new Panel());\n        leftPanel.addClass(sideStyle);\n        leftPanel.addClass(leftSideStyle);\n        middlePanel.addClass(sideStyle);\n        rightPanel.addClass(sideStyle);\n        rightPanel.addClass(rightSideStyle);\n        rootLayout.addWidget(leftPanel);\n        rootLayout.addWidget(middlePanel);\n        rootLayout.addWidget(rightPanel);\n    }\n    /**\n     * Register a new status item.\n     *\n     * @param id - a unique id for the status item.\n     *\n     * @param statusItem - The item to add to the status bar.\n     */\n    registerStatusItem(id, statusItem) {\n        if (id in this._statusItems) {\n            throw new Error(`Status item ${id} already registered.`);\n        }\n        // Populate defaults for the optional properties of the status item.\n        const fullStatusItem = Object.assign(Object.assign({}, Private.statusItemDefaults), statusItem);\n        const { align, item, rank } = fullStatusItem;\n        // Connect the activeStateChanged signal to refreshing the status item,\n        // if the signal was provided.\n        const onActiveStateChanged = () => {\n            this._refreshItem(id);\n        };\n        if (fullStatusItem.activeStateChanged) {\n            fullStatusItem.activeStateChanged.connect(onActiveStateChanged);\n        }\n        const rankItem = { id, rank };\n        fullStatusItem.item.addClass(itemStyle);\n        this._statusItems[id] = fullStatusItem;\n        if (align === 'left') {\n            const insertIndex = this._findInsertIndex(this._leftRankItems, rankItem);\n            if (insertIndex === -1) {\n                this._leftSide.addWidget(item);\n                this._leftRankItems.push(rankItem);\n            }\n            else {\n                ArrayExt.insert(this._leftRankItems, insertIndex, rankItem);\n                this._leftSide.insertWidget(insertIndex, item);\n            }\n        }\n        else if (align === 'right') {\n            const insertIndex = this._findInsertIndex(this._rightRankItems, rankItem);\n            if (insertIndex === -1) {\n                this._rightSide.addWidget(item);\n                this._rightRankItems.push(rankItem);\n            }\n            else {\n                ArrayExt.insert(this._rightRankItems, insertIndex, rankItem);\n                this._rightSide.insertWidget(insertIndex, item);\n            }\n        }\n        else {\n            this._middlePanel.addWidget(item);\n        }\n        this._refreshItem(id); // Initially refresh the status item.\n        const disposable = new DisposableDelegate(() => {\n            delete this._statusItems[id];\n            if (fullStatusItem.activeStateChanged) {\n                fullStatusItem.activeStateChanged.disconnect(onActiveStateChanged);\n            }\n            item.parent = null;\n            item.dispose();\n        });\n        this._disposables.add(disposable);\n        return disposable;\n    }\n    /**\n     * Dispose of the status bar.\n     */\n    dispose() {\n        this._leftRankItems.length = 0;\n        this._rightRankItems.length = 0;\n        this._disposables.dispose();\n        super.dispose();\n    }\n    /**\n     * Handle an 'update-request' message to the status bar.\n     */\n    onUpdateRequest(msg) {\n        this._refreshAll();\n        super.onUpdateRequest(msg);\n    }\n    _findInsertIndex(side, newItem) {\n        return ArrayExt.findFirstIndex(side, item => item.rank > newItem.rank);\n    }\n    _refreshItem(id) {\n        const statusItem = this._statusItems[id];\n        if (statusItem.isActive()) {\n            statusItem.item.show();\n            statusItem.item.update();\n        }\n        else {\n            statusItem.item.hide();\n        }\n    }\n    _refreshAll() {\n        Object.keys(this._statusItems).forEach(id => {\n            this._refreshItem(id);\n        });\n    }\n}\n/**\n * A namespace for private functionality.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Default options for a status item, less the item itself.\n     */\n    Private.statusItemDefaults = {\n        align: 'left',\n        rank: 0,\n        isActive: () => true,\n        activeStateChanged: undefined\n    };\n})(Private || (Private = {}));\n//# sourceMappingURL=statusbar.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Token } from '@lumino/coreutils';\n// tslint:disable-next-line:variable-name\nexport const IStatusBar = new Token('@jupyterlab/statusbar:IStatusBar');\n//# sourceMappingURL=tokens.js.map"],"sourceRoot":""}