{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/imageviewer/lib/tokens.js","webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/imageviewer/lib/widget.js"],"names":["IImageTracker","Token","Private","ImageViewer","Widget","context","super","this","_scale","_matrix","_colorinversion","_ready","PromiseDelegate","node","tabIndex","addClass","_img","document","createElement","appendChild","_onTitleChanged","pathChanged","connect","ready","then","isDisposed","contents","contentsModel","_mimeType","mimetype","_render","model","contentChanged","update","fileChanged","resolve","Printing","promise","value","_updateStyle","src","URL","revokeObjectURL","dispose","prod","rotateCounterclockwiseMatrix","rotateClockwiseMatrix","flipHMatrix","flipVMatrix","msg","isReady","focus","title","label","PathExt","localPath","cm","oldurl","content","toString","format","a","Blob","type","createObjectURL","b","c","d","tX","tY","prodVec","transform","style","filter","ImageViewerFactory","ABCWidgetFactory","DocumentWidget","a11","a12","a21","a22","b11","b12","b21","b22","b1","b2"],"mappings":"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","file":"6381.f29619623be09039351a.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { Token } from '@lumino/coreutils';\n/* tslint:disable */\n/**\n * The image tracker token.\n */\nexport const IImageTracker = new Token('@jupyterlab/imageviewer:IImageTracker');\n/* tslint:enable */\n//# sourceMappingURL=tokens.js.map","// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\nimport { PathExt } from '@jupyterlab/coreutils';\nimport { Printing } from '@jupyterlab/apputils';\nimport { ABCWidgetFactory, DocumentWidget } from '@jupyterlab/docregistry';\nimport { PromiseDelegate } from '@lumino/coreutils';\nimport { Widget } from '@lumino/widgets';\n/**\n * The class name added to a imageviewer.\n */\nconst IMAGE_CLASS = 'jp-ImageViewer';\n/**\n * A widget for images.\n */\nexport class ImageViewer extends Widget {\n    /**\n     * Construct a new image widget.\n     */\n    constructor(context) {\n        super();\n        this._scale = 1;\n        this._matrix = [1, 0, 0, 1];\n        this._colorinversion = 0;\n        this._ready = new PromiseDelegate();\n        this.context = context;\n        this.node.tabIndex = 0;\n        this.addClass(IMAGE_CLASS);\n        this._img = document.createElement('img');\n        this.node.appendChild(this._img);\n        this._onTitleChanged();\n        context.pathChanged.connect(this._onTitleChanged, this);\n        void context.ready.then(() => {\n            if (this.isDisposed) {\n                return;\n            }\n            const contents = context.contentsModel;\n            this._mimeType = contents.mimetype;\n            this._render();\n            context.model.contentChanged.connect(this.update, this);\n            context.fileChanged.connect(this.update, this);\n            this._ready.resolve(void 0);\n        });\n    }\n    /**\n     * Print in iframe.\n     */\n    [Printing.symbol]() {\n        return () => Printing.printWidget(this);\n    }\n    /**\n     * A promise that resolves when the image viewer is ready.\n     */\n    get ready() {\n        return this._ready.promise;\n    }\n    /**\n     * The scale factor for the image.\n     */\n    get scale() {\n        return this._scale;\n    }\n    set scale(value) {\n        if (value === this._scale) {\n            return;\n        }\n        this._scale = value;\n        this._updateStyle();\n    }\n    /**\n     * The color inversion of the image.\n     */\n    get colorinversion() {\n        return this._colorinversion;\n    }\n    set colorinversion(value) {\n        if (value === this._colorinversion) {\n            return;\n        }\n        this._colorinversion = value;\n        this._updateStyle();\n    }\n    /**\n     * Dispose of resources held by the image viewer.\n     */\n    dispose() {\n        if (this._img.src) {\n            URL.revokeObjectURL(this._img.src || '');\n        }\n        super.dispose();\n    }\n    /**\n     * Reset rotation and flip transformations.\n     */\n    resetRotationFlip() {\n        this._matrix = [1, 0, 0, 1];\n        this._updateStyle();\n    }\n    /**\n     * Rotate the image counter-clockwise (left).\n     */\n    rotateCounterclockwise() {\n        this._matrix = Private.prod(this._matrix, Private.rotateCounterclockwiseMatrix);\n        this._updateStyle();\n    }\n    /**\n     * Rotate the image clockwise (right).\n     */\n    rotateClockwise() {\n        this._matrix = Private.prod(this._matrix, Private.rotateClockwiseMatrix);\n        this._updateStyle();\n    }\n    /**\n     * Flip the image horizontally.\n     */\n    flipHorizontal() {\n        this._matrix = Private.prod(this._matrix, Private.flipHMatrix);\n        this._updateStyle();\n    }\n    /**\n     * Flip the image vertically.\n     */\n    flipVertical() {\n        this._matrix = Private.prod(this._matrix, Private.flipVMatrix);\n        this._updateStyle();\n    }\n    /**\n     * Handle `update-request` messages for the widget.\n     */\n    onUpdateRequest(msg) {\n        if (this.isDisposed || !this.context.isReady) {\n            return;\n        }\n        this._render();\n    }\n    /**\n     * Handle `'activate-request'` messages.\n     */\n    onActivateRequest(msg) {\n        this.node.focus();\n    }\n    /**\n     * Handle a change to the title.\n     */\n    _onTitleChanged() {\n        this.title.label = PathExt.basename(this.context.localPath);\n    }\n    /**\n     * Render the widget content.\n     */\n    _render() {\n        const context = this.context;\n        const cm = context.contentsModel;\n        if (!cm) {\n            return;\n        }\n        const oldurl = this._img.src || '';\n        let content = context.model.toString();\n        if (cm.format === 'base64') {\n            this._img.src = `data:${this._mimeType};base64,${content}`;\n        }\n        else {\n            const a = new Blob([content], { type: this._mimeType });\n            this._img.src = URL.createObjectURL(a);\n        }\n        URL.revokeObjectURL(oldurl);\n    }\n    /**\n     * Update the image CSS style, including the transform and filter.\n     */\n    _updateStyle() {\n        const [a, b, c, d] = this._matrix;\n        const [tX, tY] = Private.prodVec(this._matrix, [1, 1]);\n        const transform = `matrix(${a}, ${b}, ${c}, ${d}, 0, 0) translate(${tX < 0 ? -100 : 0}%, ${tY < 0 ? -100 : 0}%) `;\n        this._img.style.transform = `scale(${this._scale}) ${transform}`;\n        this._img.style.filter = `invert(${this._colorinversion})`;\n    }\n}\n/**\n * A widget factory for images.\n */\nexport class ImageViewerFactory extends ABCWidgetFactory {\n    /**\n     * Create a new widget given a context.\n     */\n    createNewWidget(context) {\n        const content = new ImageViewer(context);\n        const widget = new DocumentWidget({ content, context });\n        return widget;\n    }\n}\n/**\n * A namespace for image widget private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Multiply 2x2 matrices.\n     */\n    function prod([a11, a12, a21, a22], [b11, b12, b21, b22]) {\n        return [\n            a11 * b11 + a12 * b21,\n            a11 * b12 + a12 * b22,\n            a21 * b11 + a22 * b21,\n            a21 * b12 + a22 * b22\n        ];\n    }\n    Private.prod = prod;\n    /**\n     * Multiply a 2x2 matrix and a 2x1 vector.\n     */\n    function prodVec([a11, a12, a21, a22], [b1, b2]) {\n        return [a11 * b1 + a12 * b2, a21 * b1 + a22 * b2];\n    }\n    Private.prodVec = prodVec;\n    /**\n     * Clockwise rotation transformation matrix.\n     */\n    Private.rotateClockwiseMatrix = [0, 1, -1, 0];\n    /**\n     * Counter-clockwise rotation transformation matrix.\n     */\n    Private.rotateCounterclockwiseMatrix = [0, -1, 1, 0];\n    /**\n     * Horizontal flip transformation matrix.\n     */\n    Private.flipHMatrix = [-1, 0, 0, 1];\n    /**\n     * Vertical flip transformation matrix.\n     */\n    Private.flipVMatrix = [1, 0, 0, -1];\n})(Private || (Private = {}));\n//# sourceMappingURL=widget.js.map"],"sourceRoot":""}