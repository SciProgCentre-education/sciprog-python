{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/mainmenu-extension/lib/index.js"],"names":["CommandIDs","createEditMenu","app","menu","trans","commands","title","label","__","addCommand","undo","isEnabled","Private","delegateEnabled","undoers","execute","delegateExecute","redo","addGroup","command","clearCurrent","enabled","clearers","localizedLabel","delegateLabel","clearAll","goToLine","goToLiners","createFileMenu","router","newMenu","closeAndCleanup","closeAndCleaners","shell","currentWidget","closable","createConsole","consoleCreators","shutdown","caption","showDialog","body","buttons","Dialog","then","result","button","accept","setting","ServerConnection","apiURL","URLExt","baseUrl","method","ok","document","createElement","p1","textContent","p2","appendChild","Widget","node","window","close","catch","data","logout","navigate","hard","newGroup","type","submenu","newViewGroup","filter","item","closeGroup","map","saveGroup","reGroup","quitEntry","createKernelMenu","interruptKernel","kernelUsers","reconnectToKernel","restartKernel","restartKernelAndClear","changeKernel","shutdownKernel","shutdownAllKernels","undefined","serviceManager","sessions","running","next","shutdownAll","restartGroup","restartAndRunToSelected","restartAndRunAll","createViewMenu","lineNumbering","editorViewers","isToggled","delegateToggled","matchBrackets","wordWrap","editorViewerGroup","createRunMenu","run","codeRunners","runAll","runAllGroup","createSettingsMenu","_","createTabsMenu","labShell","activatePreviouslyUsedTab","tabGroup","disposable","activateById","args","id","widget","find","widgets","w","previousId","restored","populateTabs","isDisposed","dispose","length","isPreviouslyUsedTabAttached","each","push","layoutModified","connect","currentChanged","oldValue","createHelpMenu","openEdit","openFile","openKernel","openView","openRun","runAbove","runBelow","openTabs","openSettings","openHelp","openFirst","requires","IRouter","ITranslator","optional","ICommandPalette","ILabShell","provides","IMainMenu","activate","translator","palette","load","MainMenu","addClass","quitButton","PageConfig","toLowerCase","fileMenu","editMenu","kernelMenu","runMenu","settingsMenu","viewMenu","helpMenu","tabsMenu","activateMenu","activeMenu","openActiveMenu","activeIndex","addItem","category","add","rank","it","predicate","value","s","extender","tracker","has","count","size","executor","f","Promise","resolve","toggled"],"mappings":"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","file":"8771.2a43f5e4106807579242.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module mainmenu-extension\n */\nimport { each, find } from '@lumino/algorithm';\nimport { Widget } from '@lumino/widgets';\nimport { ILabShell, IRouter } from '@jupyterlab/application';\nimport { ICommandPalette, showDialog, Dialog } from '@jupyterlab/apputils';\nimport { PageConfig, URLExt } from '@jupyterlab/coreutils';\nimport { IMainMenu, MainMenu } from '@jupyterlab/mainmenu';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { ITranslator } from '@jupyterlab/translation';\n/**\n * A namespace for command IDs of semantic extension points.\n */\nexport var CommandIDs;\n(function (CommandIDs) {\n    CommandIDs.openEdit = 'editmenu:open';\n    CommandIDs.undo = 'editmenu:undo';\n    CommandIDs.redo = 'editmenu:redo';\n    CommandIDs.clearCurrent = 'editmenu:clear-current';\n    CommandIDs.clearAll = 'editmenu:clear-all';\n    CommandIDs.find = 'editmenu:find';\n    CommandIDs.goToLine = 'editmenu:go-to-line';\n    CommandIDs.openFile = 'filemenu:open';\n    CommandIDs.closeAndCleanup = 'filemenu:close-and-cleanup';\n    CommandIDs.createConsole = 'filemenu:create-console';\n    CommandIDs.shutdown = 'filemenu:shutdown';\n    CommandIDs.logout = 'filemenu:logout';\n    CommandIDs.openKernel = 'kernelmenu:open';\n    CommandIDs.interruptKernel = 'kernelmenu:interrupt';\n    CommandIDs.reconnectToKernel = 'kernelmenu:reconnect-to-kernel';\n    CommandIDs.restartKernel = 'kernelmenu:restart';\n    CommandIDs.restartKernelAndClear = 'kernelmenu:restart-and-clear';\n    CommandIDs.restartAndRunToSelected = 'notebook:restart-and-run-to-selected';\n    CommandIDs.changeKernel = 'kernelmenu:change';\n    CommandIDs.shutdownKernel = 'kernelmenu:shutdown';\n    CommandIDs.shutdownAllKernels = 'kernelmenu:shutdownAll';\n    CommandIDs.openView = 'viewmenu:open';\n    CommandIDs.wordWrap = 'viewmenu:word-wrap';\n    CommandIDs.lineNumbering = 'viewmenu:line-numbering';\n    CommandIDs.matchBrackets = 'viewmenu:match-brackets';\n    CommandIDs.openRun = 'runmenu:open';\n    CommandIDs.run = 'runmenu:run';\n    CommandIDs.runAll = 'runmenu:run-all';\n    CommandIDs.restartAndRunAll = 'runmenu:restart-and-run-all';\n    CommandIDs.runAbove = 'runmenu:run-above';\n    CommandIDs.runBelow = 'runmenu:run-below';\n    CommandIDs.openTabs = 'tabsmenu:open';\n    CommandIDs.activateById = 'tabsmenu:activate-by-id';\n    CommandIDs.activatePreviouslyUsedTab = 'tabsmenu:activate-previously-used-tab';\n    CommandIDs.openSettings = 'settingsmenu:open';\n    CommandIDs.openHelp = 'helpmenu:open';\n    CommandIDs.openFirst = 'mainmenu:open-first';\n})(CommandIDs || (CommandIDs = {}));\n/**\n * A service providing an interface to the main menu.\n */\nconst plugin = {\n    id: '@jupyterlab/mainmenu-extension:plugin',\n    requires: [IRouter, ITranslator],\n    optional: [ICommandPalette, ILabShell],\n    provides: IMainMenu,\n    activate: (app, router, translator, palette, labShell) => {\n        const { commands } = app;\n        const trans = translator.load('jupyterlab');\n        const menu = new MainMenu(commands);\n        menu.id = 'jp-MainMenu';\n        menu.addClass('jp-scrollbar-tiny');\n        // Only add quit button if the back-end supports it by checking page config.\n        const quitButton = PageConfig.getOption('quitButton').toLowerCase();\n        menu.fileMenu.quitEntry = quitButton === 'true';\n        // Create the application menus.\n        createEditMenu(app, menu.editMenu, trans);\n        createFileMenu(app, menu.fileMenu, router, trans);\n        createKernelMenu(app, menu.kernelMenu, trans);\n        createRunMenu(app, menu.runMenu, trans);\n        createSettingsMenu(app, menu.settingsMenu, trans);\n        createViewMenu(app, menu.viewMenu, trans);\n        createHelpMenu(app, menu.helpMenu, trans);\n        // Set the Tabs Title so it's visible also in other shells\n        const tabsMenu = menu.tabsMenu;\n        tabsMenu.menu.title.label = trans.__('Tabs');\n        // The tabs menu relies on lab shell functionality.\n        if (labShell) {\n            createTabsMenu(app, tabsMenu, labShell, trans);\n        }\n        // Create commands to open the main application menus.\n        const activateMenu = (item) => {\n            menu.activeMenu = item;\n            menu.openActiveMenu();\n        };\n        commands.addCommand(CommandIDs.openEdit, {\n            label: trans.__('Open Edit Menu'),\n            execute: () => activateMenu(menu.editMenu.menu)\n        });\n        commands.addCommand(CommandIDs.openFile, {\n            label: trans.__('Open File Menu'),\n            execute: () => activateMenu(menu.fileMenu.menu)\n        });\n        commands.addCommand(CommandIDs.openKernel, {\n            label: trans.__('Open Kernel Menu'),\n            execute: () => activateMenu(menu.kernelMenu.menu)\n        });\n        commands.addCommand(CommandIDs.openRun, {\n            label: trans.__('Open Run Menu'),\n            execute: () => activateMenu(menu.runMenu.menu)\n        });\n        commands.addCommand(CommandIDs.openView, {\n            label: trans.__('Open View Menu'),\n            execute: () => activateMenu(menu.viewMenu.menu)\n        });\n        commands.addCommand(CommandIDs.openSettings, {\n            label: trans.__('Open Settings Menu'),\n            execute: () => activateMenu(menu.settingsMenu.menu)\n        });\n        commands.addCommand(CommandIDs.openTabs, {\n            label: trans.__('Open Tabs Menu'),\n            execute: () => activateMenu(menu.tabsMenu.menu)\n        });\n        commands.addCommand(CommandIDs.openHelp, {\n            label: trans.__('Open Help Menu'),\n            execute: () => activateMenu(menu.helpMenu.menu)\n        });\n        commands.addCommand(CommandIDs.openFirst, {\n            label: trans.__('Open First Menu'),\n            execute: () => {\n                menu.activeIndex = 0;\n                menu.openActiveMenu();\n            }\n        });\n        if (palette) {\n            // Add some of the commands defined here to the command palette.\n            if (menu.fileMenu.quitEntry) {\n                palette.addItem({\n                    command: CommandIDs.shutdown,\n                    category: trans.__('Main Area')\n                });\n                palette.addItem({\n                    command: CommandIDs.logout,\n                    category: trans.__('Main Area')\n                });\n            }\n            palette.addItem({\n                command: CommandIDs.shutdownAllKernels,\n                category: trans.__('Kernel Operations')\n            });\n            palette.addItem({\n                command: CommandIDs.activatePreviouslyUsedTab,\n                category: trans.__('Main Area')\n            });\n        }\n        app.shell.add(menu, 'menu', { rank: 100 });\n        return menu;\n    }\n};\n/**\n * Create the basic `Edit` menu.\n */\nexport function createEditMenu(app, menu, trans) {\n    const commands = menu.menu.commands;\n    menu.menu.title.label = trans.__('Edit');\n    // Add the undo/redo commands the the Edit menu.\n    commands.addCommand(CommandIDs.undo, {\n        label: trans.__('Undo'),\n        isEnabled: Private.delegateEnabled(app, menu.undoers, 'undo'),\n        execute: Private.delegateExecute(app, menu.undoers, 'undo')\n    });\n    commands.addCommand(CommandIDs.redo, {\n        label: trans.__('Redo'),\n        isEnabled: Private.delegateEnabled(app, menu.undoers, 'redo'),\n        execute: Private.delegateExecute(app, menu.undoers, 'redo')\n    });\n    menu.addGroup([{ command: CommandIDs.undo }, { command: CommandIDs.redo }], 0);\n    // Add the clear commands to the Edit menu.\n    commands.addCommand(CommandIDs.clearCurrent, {\n        label: () => {\n            const enabled = Private.delegateEnabled(app, menu.clearers, 'clearCurrent')();\n            let localizedLabel = trans.__('Clear');\n            if (enabled) {\n                localizedLabel = Private.delegateLabel(app, menu.clearers, 'clearCurrentLabel');\n            }\n            return localizedLabel;\n        },\n        isEnabled: Private.delegateEnabled(app, menu.clearers, 'clearCurrent'),\n        execute: Private.delegateExecute(app, menu.clearers, 'clearCurrent')\n    });\n    commands.addCommand(CommandIDs.clearAll, {\n        label: () => {\n            const enabled = Private.delegateEnabled(app, menu.clearers, 'clearAll')();\n            let localizedLabel = trans.__('Clear All');\n            if (enabled) {\n                localizedLabel = Private.delegateLabel(app, menu.clearers, 'clearAllLabel');\n            }\n            return localizedLabel;\n        },\n        isEnabled: Private.delegateEnabled(app, menu.clearers, 'clearAll'),\n        execute: Private.delegateExecute(app, menu.clearers, 'clearAll')\n    });\n    menu.addGroup([{ command: CommandIDs.clearCurrent }, { command: CommandIDs.clearAll }], 10);\n    commands.addCommand(CommandIDs.goToLine, {\n        label: trans.__('Go to Line…'),\n        isEnabled: Private.delegateEnabled(app, menu.goToLiners, 'goToLine'),\n        execute: Private.delegateExecute(app, menu.goToLiners, 'goToLine')\n    });\n    menu.addGroup([{ command: CommandIDs.goToLine }], 200);\n}\n/**\n * Create the basic `File` menu.\n */\nexport function createFileMenu(app, menu, router, trans) {\n    const commands = menu.menu.commands;\n    menu.menu.title.label = trans.__('File');\n    menu.newMenu.menu.title.label = trans.__('New');\n    // Add a delegator command for closing and cleaning up an activity.\n    // This one is a bit different, in that we consider it enabled\n    // even if it cannot find a delegate for the activity.\n    // In that case, we instead call the application `close` command.\n    commands.addCommand(CommandIDs.closeAndCleanup, {\n        label: () => {\n            const localizedLabel = Private.delegateLabel(app, menu.closeAndCleaners, 'closeAndCleanupLabel');\n            return localizedLabel ? localizedLabel : trans.__('Close and Shutdown');\n        },\n        isEnabled: () => !!app.shell.currentWidget && !!app.shell.currentWidget.title.closable,\n        execute: () => {\n            // Check if we have a registered delegate. If so, call that.\n            if (Private.delegateEnabled(app, menu.closeAndCleaners, 'closeAndCleanup')()) {\n                return Private.delegateExecute(app, menu.closeAndCleaners, 'closeAndCleanup')();\n            }\n            // If we have no delegate, call the top-level application close.\n            return app.commands.execute('application:close');\n        }\n    });\n    // Add a delegator command for creating a console for an activity.\n    commands.addCommand(CommandIDs.createConsole, {\n        label: () => {\n            const localizedLabel = Private.delegateLabel(app, menu.consoleCreators, 'createConsoleLabel');\n            return localizedLabel\n                ? localizedLabel\n                : trans.__('New Console for Activity');\n        },\n        isEnabled: Private.delegateEnabled(app, menu.consoleCreators, 'createConsole'),\n        execute: Private.delegateExecute(app, menu.consoleCreators, 'createConsole')\n    });\n    commands.addCommand(CommandIDs.shutdown, {\n        label: trans.__('Shut Down'),\n        caption: trans.__('Shut down JupyterLab'),\n        execute: () => {\n            return showDialog({\n                title: trans.__('Shutdown confirmation'),\n                body: trans.__('Please confirm you want to shut down JupyterLab.'),\n                buttons: [\n                    Dialog.cancelButton(),\n                    Dialog.warnButton({ label: trans.__('Shut Down') })\n                ]\n            }).then(result => {\n                if (result.button.accept) {\n                    const setting = ServerConnection.makeSettings();\n                    const apiURL = URLExt.join(setting.baseUrl, 'api/shutdown');\n                    return ServerConnection.makeRequest(apiURL, { method: 'POST' }, setting)\n                        .then(result => {\n                        if (result.ok) {\n                            // Close this window if the shutdown request has been successful\n                            const body = document.createElement('div');\n                            const p1 = document.createElement('p');\n                            p1.textContent = trans.__('You have shut down the Jupyter server. You can now close this tab.');\n                            const p2 = document.createElement('p');\n                            p2.textContent = trans.__('To use JupyterLab again, you will need to relaunch it.');\n                            body.appendChild(p1);\n                            body.appendChild(p2);\n                            void showDialog({\n                                title: trans.__('Server stopped'),\n                                body: new Widget({ node: body }),\n                                buttons: []\n                            });\n                            window.close();\n                        }\n                        else {\n                            throw new ServerConnection.ResponseError(result);\n                        }\n                    })\n                        .catch(data => {\n                        throw new ServerConnection.NetworkError(data);\n                    });\n                }\n            });\n        }\n    });\n    commands.addCommand(CommandIDs.logout, {\n        label: trans.__('Log Out'),\n        caption: trans.__('Log out of JupyterLab'),\n        execute: () => {\n            router.navigate('/logout', { hard: true });\n        }\n    });\n    // Add the new group\n    const newGroup = [\n        { type: 'submenu', submenu: menu.newMenu.menu },\n        { command: 'filebrowser:create-main-launcher' }\n    ];\n    const openGroup = [{ command: 'filebrowser:open-path' }];\n    const newViewGroup = [\n        { command: 'docmanager:clone' },\n        { command: CommandIDs.createConsole }\n    ].filter(item => !!item);\n    // Add the close group\n    const closeGroup = [\n        'application:close',\n        'filemenu:close-and-cleanup',\n        'application:close-all'\n    ].map(command => {\n        return { command };\n    });\n    // Add save group.\n    const saveGroup = [\n        'docmanager:save',\n        'docmanager:save-as',\n        'docmanager:save-all'\n    ].map(command => {\n        return { command };\n    });\n    // Add the re group.\n    const reGroup = [\n        'docmanager:reload',\n        'docmanager:restore-checkpoint',\n        'docmanager:rename'\n    ].map(command => {\n        return { command };\n    });\n    // Add the quit group.\n    const quitGroup = [\n        { command: 'filemenu:logout' },\n        { command: 'filemenu:shutdown' }\n    ];\n    const printGroup = [{ command: 'apputils:print' }];\n    menu.addGroup(newGroup, 0);\n    menu.addGroup(openGroup, 1);\n    menu.addGroup(newViewGroup, 2);\n    menu.addGroup(closeGroup, 3);\n    menu.addGroup(saveGroup, 4);\n    menu.addGroup(reGroup, 5);\n    menu.addGroup(printGroup, 98);\n    if (menu.quitEntry) {\n        menu.addGroup(quitGroup, 99);\n    }\n}\n/**\n * Create the basic `Kernel` menu.\n */\nexport function createKernelMenu(app, menu, trans) {\n    const commands = menu.menu.commands;\n    menu.menu.title.label = trans.__('Kernel');\n    commands.addCommand(CommandIDs.interruptKernel, {\n        label: trans.__('Interrupt Kernel'),\n        isEnabled: Private.delegateEnabled(app, menu.kernelUsers, 'interruptKernel'),\n        execute: Private.delegateExecute(app, menu.kernelUsers, 'interruptKernel')\n    });\n    commands.addCommand(CommandIDs.reconnectToKernel, {\n        label: trans.__('Reconnect to Kernel'),\n        isEnabled: Private.delegateEnabled(app, menu.kernelUsers, 'reconnectToKernel'),\n        execute: Private.delegateExecute(app, menu.kernelUsers, 'reconnectToKernel')\n    });\n    commands.addCommand(CommandIDs.restartKernel, {\n        label: trans.__('Restart Kernel…'),\n        isEnabled: Private.delegateEnabled(app, menu.kernelUsers, 'restartKernel'),\n        execute: Private.delegateExecute(app, menu.kernelUsers, 'restartKernel')\n    });\n    commands.addCommand(CommandIDs.restartKernelAndClear, {\n        label: () => {\n            const enabled = Private.delegateEnabled(app, menu.kernelUsers, 'restartKernelAndClear')();\n            let localizedLabel = trans.__('Restart Kernel and Clear…');\n            if (enabled) {\n                localizedLabel = Private.delegateLabel(app, menu.kernelUsers, 'restartKernelAndClearLabel');\n            }\n            return localizedLabel;\n        },\n        isEnabled: Private.delegateEnabled(app, menu.kernelUsers, 'restartKernelAndClear'),\n        execute: Private.delegateExecute(app, menu.kernelUsers, 'restartKernelAndClear')\n    });\n    commands.addCommand(CommandIDs.changeKernel, {\n        label: trans.__('Change Kernel…'),\n        isEnabled: Private.delegateEnabled(app, menu.kernelUsers, 'changeKernel'),\n        execute: Private.delegateExecute(app, menu.kernelUsers, 'changeKernel')\n    });\n    commands.addCommand(CommandIDs.shutdownKernel, {\n        label: trans.__('Shut Down Kernel'),\n        isEnabled: Private.delegateEnabled(app, menu.kernelUsers, 'shutdownKernel'),\n        execute: Private.delegateExecute(app, menu.kernelUsers, 'shutdownKernel')\n    });\n    commands.addCommand(CommandIDs.shutdownAllKernels, {\n        label: trans.__('Shut Down All Kernels…'),\n        isEnabled: () => {\n            return app.serviceManager.sessions.running().next() !== undefined;\n        },\n        execute: () => {\n            return showDialog({\n                title: trans.__('Shut Down All?'),\n                body: trans.__('Shut down all kernels?'),\n                buttons: [\n                    Dialog.cancelButton({ label: trans.__('Dismiss') }),\n                    Dialog.warnButton({ label: trans.__('Shut Down All') })\n                ]\n            }).then(result => {\n                if (result.button.accept) {\n                    return app.serviceManager.sessions.shutdownAll();\n                }\n            });\n        }\n    });\n    const restartGroup = [\n        CommandIDs.restartKernel,\n        CommandIDs.restartKernelAndClear,\n        CommandIDs.restartAndRunToSelected,\n        CommandIDs.restartAndRunAll\n    ].map(command => {\n        return { command };\n    });\n    menu.addGroup([{ command: CommandIDs.interruptKernel }], 0);\n    menu.addGroup(restartGroup, 1);\n    menu.addGroup([{ command: CommandIDs.reconnectToKernel }], 1.5);\n    menu.addGroup([\n        { command: CommandIDs.shutdownKernel },\n        { command: CommandIDs.shutdownAllKernels }\n    ], 2);\n    menu.addGroup([{ command: CommandIDs.changeKernel }], 3);\n}\n/**\n * Create the basic `View` menu.\n */\nexport function createViewMenu(app, menu, trans) {\n    const commands = menu.menu.commands;\n    menu.menu.title.label = trans.__('View');\n    commands.addCommand(CommandIDs.lineNumbering, {\n        label: trans.__('Show Line Numbers'),\n        isEnabled: Private.delegateEnabled(app, menu.editorViewers, 'toggleLineNumbers'),\n        isToggled: Private.delegateToggled(app, menu.editorViewers, 'lineNumbersToggled'),\n        execute: Private.delegateExecute(app, menu.editorViewers, 'toggleLineNumbers')\n    });\n    commands.addCommand(CommandIDs.matchBrackets, {\n        label: trans.__('Match Brackets'),\n        isEnabled: Private.delegateEnabled(app, menu.editorViewers, 'toggleMatchBrackets'),\n        isToggled: Private.delegateToggled(app, menu.editorViewers, 'matchBracketsToggled'),\n        execute: Private.delegateExecute(app, menu.editorViewers, 'toggleMatchBrackets')\n    });\n    commands.addCommand(CommandIDs.wordWrap, {\n        label: trans.__('Wrap Words'),\n        isEnabled: Private.delegateEnabled(app, menu.editorViewers, 'toggleWordWrap'),\n        isToggled: Private.delegateToggled(app, menu.editorViewers, 'wordWrapToggled'),\n        execute: Private.delegateExecute(app, menu.editorViewers, 'toggleWordWrap')\n    });\n    menu.addGroup([{ command: 'apputils:activate-command-palette' }], 0);\n    menu.addGroup([\n        { command: 'application:toggle-mode' },\n        { command: 'application:toggle-presentation-mode' }\n    ], 1);\n    menu.addGroup([\n        { command: 'application:toggle-left-area' },\n        { command: 'application:toggle-right-area' }\n    ], 2);\n    const editorViewerGroup = [\n        CommandIDs.lineNumbering,\n        CommandIDs.matchBrackets,\n        CommandIDs.wordWrap\n    ].map(command => {\n        return { command };\n    });\n    menu.addGroup(editorViewerGroup, 10);\n}\n/**\n * Create the basic `Run` menu.\n */\nexport function createRunMenu(app, menu, trans) {\n    const commands = menu.menu.commands;\n    menu.menu.title.label = trans.__('Run');\n    commands.addCommand(CommandIDs.run, {\n        label: () => {\n            const localizedLabel = Private.delegateLabel(app, menu.codeRunners, 'runLabel');\n            const enabled = Private.delegateEnabled(app, menu.codeRunners, 'run')();\n            return enabled ? localizedLabel : trans.__('Run Selected');\n        },\n        isEnabled: Private.delegateEnabled(app, menu.codeRunners, 'run'),\n        execute: Private.delegateExecute(app, menu.codeRunners, 'run')\n    });\n    commands.addCommand(CommandIDs.runAll, {\n        label: () => {\n            let localizedLabel = trans.__('Run All');\n            const enabled = Private.delegateEnabled(app, menu.codeRunners, 'runAll')();\n            if (enabled) {\n                localizedLabel = Private.delegateLabel(app, menu.codeRunners, 'runAllLabel');\n            }\n            return localizedLabel;\n        },\n        isEnabled: Private.delegateEnabled(app, menu.codeRunners, 'runAll'),\n        execute: Private.delegateExecute(app, menu.codeRunners, 'runAll')\n    });\n    commands.addCommand(CommandIDs.restartAndRunAll, {\n        label: () => {\n            let localizedLabel = trans.__('Restart Kernel and Run All');\n            const enabled = Private.delegateEnabled(app, menu.codeRunners, 'restartAndRunAll')();\n            if (enabled) {\n                localizedLabel = Private.delegateLabel(app, menu.codeRunners, 'restartAndRunAllLabel');\n            }\n            return localizedLabel;\n        },\n        isEnabled: Private.delegateEnabled(app, menu.codeRunners, 'restartAndRunAll'),\n        execute: Private.delegateExecute(app, menu.codeRunners, 'restartAndRunAll')\n    });\n    const runAllGroup = [CommandIDs.runAll, CommandIDs.restartAndRunAll].map(command => {\n        return { command };\n    });\n    menu.addGroup([{ command: CommandIDs.run }], 0);\n    menu.addGroup(runAllGroup, 999);\n}\n/**\n * Create the basic `Settings` menu.\n */\nexport function createSettingsMenu(_, menu, trans) {\n    menu.menu.title.label = trans.__('Settings');\n    menu.addGroup([{ command: 'settingeditor:open' }], 1000);\n}\n/**\n * Create the basic `Tabs` menu.\n */\nexport function createTabsMenu(app, menu, labShell, trans) {\n    const commands = app.commands;\n    // Add commands for cycling the active tabs.\n    menu.addGroup([\n        { command: 'application:activate-next-tab' },\n        { command: 'application:activate-previous-tab' },\n        { command: 'application:activate-next-tab-bar' },\n        { command: 'application:activate-previous-tab-bar' },\n        { command: CommandIDs.activatePreviouslyUsedTab }\n    ], 0);\n    // A list of the active tabs in the main area.\n    const tabGroup = [];\n    // A disposable for getting rid of the out-of-date tabs list.\n    let disposable;\n    // Command to activate a widget by id.\n    commands.addCommand(CommandIDs.activateById, {\n        label: args => {\n            const id = args['id'] || '';\n            const widget = find(app.shell.widgets('main'), w => w.id === id);\n            return (widget && widget.title.label) || '';\n        },\n        isToggled: args => {\n            const id = args['id'] || '';\n            return !!app.shell.currentWidget && app.shell.currentWidget.id === id;\n        },\n        execute: args => app.shell.activateById(args['id'] || '')\n    });\n    let previousId = '';\n    // Command to toggle between the current\n    // tab and the last modified tab.\n    commands.addCommand(CommandIDs.activatePreviouslyUsedTab, {\n        label: trans.__('Activate Previously Used Tab'),\n        isEnabled: () => !!previousId,\n        execute: () => commands.execute(CommandIDs.activateById, { id: previousId })\n    });\n    if (labShell) {\n        void app.restored.then(() => {\n            // Iterate over the current widgets in the\n            // main area, and add them to the tab group\n            // of the menu.\n            const populateTabs = () => {\n                // remove the previous tab list\n                if (disposable && !disposable.isDisposed) {\n                    disposable.dispose();\n                }\n                tabGroup.length = 0;\n                let isPreviouslyUsedTabAttached = false;\n                each(app.shell.widgets('main'), widget => {\n                    if (widget.id === previousId) {\n                        isPreviouslyUsedTabAttached = true;\n                    }\n                    tabGroup.push({\n                        command: CommandIDs.activateById,\n                        args: { id: widget.id }\n                    });\n                });\n                disposable = menu.addGroup(tabGroup, 1);\n                previousId = isPreviouslyUsedTabAttached ? previousId : '';\n            };\n            populateTabs();\n            labShell.layoutModified.connect(() => {\n                populateTabs();\n            });\n            // Update the ID of the previous active tab if a new tab is selected.\n            labShell.currentChanged.connect((_, args) => {\n                const widget = args.oldValue;\n                if (!widget) {\n                    return;\n                }\n                previousId = widget.id;\n            });\n        });\n    }\n}\n/**\n * Create the basic `Help` menu.\n */\nexport function createHelpMenu(app, menu, trans) {\n    menu.menu.title.label = trans.__('Help');\n}\nexport default plugin;\n/**\n * A namespace for Private data.\n */\nvar Private;\n(function (Private) {\n    /**\n     * Return the first value of the iterable that satisfies the predicate\n     * function.\n     */\n    function find(it, predicate) {\n        for (const value of it) {\n            if (predicate(value)) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * A utility function that delegates a portion of a label to an IMenuExtender.\n     */\n    function delegateLabel(app, s, label) {\n        const widget = app.shell.currentWidget;\n        const extender = widget\n            ? find(s, value => value.tracker.has(widget))\n            : undefined;\n        if (!extender) {\n            return '';\n        }\n        else {\n            const count = extender.tracker.size;\n            // Coerce the result to be a string. When Typedoc is updated to use\n            // Typescript 2.8, we can possibly use conditional types to get Typescript\n            // to recognize this is a string.\n            return extender[label](count);\n        }\n    }\n    Private.delegateLabel = delegateLabel;\n    /**\n     * A utility function that delegates command execution\n     * to an IMenuExtender.\n     */\n    function delegateExecute(app, s, executor) {\n        return () => {\n            const widget = app.shell.currentWidget;\n            const extender = widget\n                ? find(s, value => value.tracker.has(widget))\n                : undefined;\n            if (!extender) {\n                return Promise.resolve(void 0);\n            }\n            // Coerce the result to be a function. When Typedoc is updated to use\n            // Typescript 2.8, we can possibly use conditional types to get Typescript\n            // to recognize this is a function.\n            const f = extender[executor];\n            return f(widget);\n        };\n    }\n    Private.delegateExecute = delegateExecute;\n    /**\n     * A utility function that delegates whether a command is enabled\n     * to an IMenuExtender.\n     */\n    function delegateEnabled(app, s, executor) {\n        return () => {\n            const widget = app.shell.currentWidget;\n            const extender = widget\n                ? find(s, value => value.tracker.has(widget))\n                : undefined;\n            return (!!extender &&\n                !!extender[executor] &&\n                (extender.isEnabled && widget ? extender.isEnabled(widget) : true));\n        };\n    }\n    Private.delegateEnabled = delegateEnabled;\n    /**\n     * A utility function that delegates whether a command is toggled\n     * for an IMenuExtender.\n     */\n    function delegateToggled(app, s, toggled) {\n        return () => {\n            const widget = app.shell.currentWidget;\n            const extender = widget\n                ? find(s, value => value.tracker.has(widget))\n                : undefined;\n            // Coerce extender[toggled] to be a function. When Typedoc is updated to use\n            // Typescript 2.8, we can possibly use conditional types to get Typescript\n            // to recognize this is a function.\n            return (!!extender &&\n                !!extender[toggled] &&\n                !!widget &&\n                !!extender[toggled](widget));\n        };\n    }\n    Private.delegateToggled = delegateToggled;\n})(Private || (Private = {}));\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}