{"version":3,"sources":["webpack://_JUPYTERLAB.CORE_OUTPUT/../node_modules/@jupyterlab/toc-extension/lib/index.js"],"names":["id","autoStart","provides","ITableOfContentsRegistry","requires","IDocumentManager","IEditorTracker","ILabShell","ILayoutRestorer","IMarkdownViewerTracker","INotebookTracker","IRenderMimeRegistry","ITranslator","activate","async","app","docmanager","editorTracker","labShell","restorer","markdownViewerTracker","notebookTracker","rendermime","translator","trans","load","toc","TableOfContents","registry","title","icon","tocIcon","caption","__","node","setAttribute","add","rank","notebookGenerator","createNotebookGenerator","sanitizer","markdownGenerator","createMarkdownGenerator","renderedMarkdownGenerator","createRenderedMarkdownGenerator","latexGenerator","createLatexGenerator","pythonGenerator","createPythonGenerator","currentChanged","connect","widget","shell","currentWidget","generator","find","current","isDisposed"],"mappings":"wQA0FA,MAmBA,EAnBkB,CACdA,GAAI,yBACJC,WAAW,EACXC,SAAU,EAAAC,yBACVC,SAAU,CACN,EAAAC,iBACA,EAAAC,eACA,EAAAC,UACA,EAAAC,gBACA,EAAAC,uBACA,EAAAC,iBACA,EAAAC,oBACA,EAAAC,aAEJC,SA1EJC,eAA2BC,EAAKC,EAAYC,EAAeC,EAAUC,EAAUC,EAAuBC,EAAiBC,EAAYC,GAC/H,MAAMC,EAAQD,EAAWE,KAAK,cAExBC,EAAM,IAAI,EAAAC,gBAAgB,CAAEX,aAAYM,aAAYC,eAEpDK,EAAW,IAAI,0BAErBF,EAAIG,MAAMC,KAAO,EAAAC,QACjBL,EAAIG,MAAMG,QAAUR,EAAMS,GAAG,qBAC7BP,EAAI1B,GAAK,oBACT0B,EAAIQ,KAAKC,aAAa,OAAQ,UAC9BT,EAAIQ,KAAKC,aAAa,aAAcX,EAAMS,GAAG,8BAC7Cf,EAASkB,IAAIV,EAAK,OAAQ,CAAEW,KAAM,MAElClB,EAASiB,IAAIV,EAAK,0BAElB,MAAMY,GAAoB,IAAAC,yBAAwBlB,EAAiBK,EAAKJ,EAAWkB,UAAWjB,GAC9FK,EAASQ,IAAIE,GAEb,MAAMG,GAAoB,IAAAC,yBAAwBzB,EAAeS,EAAKJ,EAAWkB,UAAWjB,GAC5FK,EAASQ,IAAIK,GAEb,MAAME,GAA4B,IAAAC,iCAAgCxB,EAAuBM,EAAKJ,EAAWkB,UAAWjB,GACpHK,EAASQ,IAAIO,GAEb,MAAME,GAAiB,IAAAC,sBAAqB7B,GAC5CW,EAASQ,IAAIS,GAEb,MAAME,GAAkB,IAAAC,uBAAsB/B,GAI9C,OAHAW,EAASQ,IAAIW,GAEb7B,EAAS+B,eAAeC,SAOxB,WACI,IAAIC,EAASpC,EAAIqC,MAAMC,cACvB,IAAKF,EACD,OAEJ,IAAIG,EAAY1B,EAAS2B,KAAKJ,GACzBG,EAQL5B,EAAI8B,QAAU,CAAEL,SAAQG,aALhB5B,EAAI8B,SAAW9B,EAAI8B,QAAQL,OAAOM,aAClC/B,EAAI8B,QAAU,SAhBnB5B","file":"6796.99101a69309dea1935b3.js","sourcesContent":["// Copyright (c) Jupyter Development Team.\n// Distributed under the terms of the Modified BSD License.\n/**\n * @packageDocumentation\n * @module toc-extension\n */\nimport { ILabShell, ILayoutRestorer } from '@jupyterlab/application';\nimport { IDocumentManager } from '@jupyterlab/docmanager';\nimport { IEditorTracker } from '@jupyterlab/fileeditor';\nimport { IMarkdownViewerTracker } from '@jupyterlab/markdownviewer';\nimport { INotebookTracker } from '@jupyterlab/notebook';\nimport { IRenderMimeRegistry } from '@jupyterlab/rendermime';\nimport { TableOfContents, ITableOfContentsRegistry, TableOfContentsRegistry as Registry, createLatexGenerator, createNotebookGenerator, createMarkdownGenerator, createPythonGenerator, createRenderedMarkdownGenerator } from '@jupyterlab/toc';\nimport { ITranslator } from '@jupyterlab/translation';\nimport { tocIcon } from '@jupyterlab/ui-components';\n/**\n * Activates the ToC extension.\n *\n * @private\n * @param app - Jupyter application\n * @param docmanager - document manager\n * @param editorTracker - editor tracker\n * @param labShell - Jupyter lab shell\n * @param restorer - application layout restorer\n * @param markdownViewerTracker - Markdown viewer tracker\n * @param notebookTracker - notebook tracker\n * @param rendermime - rendered MIME registry\n * @param translator - translator\n * @returns table of contents registry\n */\nasync function activateTOC(app, docmanager, editorTracker, labShell, restorer, markdownViewerTracker, notebookTracker, rendermime, translator) {\n    const trans = translator.load('jupyterlab');\n    // Create the ToC widget:\n    const toc = new TableOfContents({ docmanager, rendermime, translator });\n    // Create the ToC registry:\n    const registry = new Registry();\n    // Add the ToC to the left area:\n    toc.title.icon = tocIcon;\n    toc.title.caption = trans.__('Table of Contents');\n    toc.id = 'table-of-contents';\n    toc.node.setAttribute('role', 'region');\n    toc.node.setAttribute('aria-label', trans.__('Table of Contents section'));\n    labShell.add(toc, 'left', { rank: 400 });\n    // Add the ToC widget to the application restorer:\n    restorer.add(toc, '@jupyterlab/toc:plugin');\n    // Create a notebook generator:\n    const notebookGenerator = createNotebookGenerator(notebookTracker, toc, rendermime.sanitizer, translator);\n    registry.add(notebookGenerator);\n    // Create a Markdown generator:\n    const markdownGenerator = createMarkdownGenerator(editorTracker, toc, rendermime.sanitizer, translator);\n    registry.add(markdownGenerator);\n    // Create a rendered Markdown generator:\n    const renderedMarkdownGenerator = createRenderedMarkdownGenerator(markdownViewerTracker, toc, rendermime.sanitizer, translator);\n    registry.add(renderedMarkdownGenerator);\n    // Create a LaTeX generator:\n    const latexGenerator = createLatexGenerator(editorTracker);\n    registry.add(latexGenerator);\n    // Create a Python generator:\n    const pythonGenerator = createPythonGenerator(editorTracker);\n    registry.add(pythonGenerator);\n    // Update the ToC when the active widget changes:\n    labShell.currentChanged.connect(onConnect);\n    return registry;\n    /**\n     * Callback invoked when the active widget changes.\n     *\n     * @private\n     */\n    function onConnect() {\n        let widget = app.shell.currentWidget;\n        if (!widget) {\n            return;\n        }\n        let generator = registry.find(widget);\n        if (!generator) {\n            // If the previously used widget is still available, stick with it.\n            // Otherwise, set the current ToC widget to null.\n            if (toc.current && toc.current.widget.isDisposed) {\n                toc.current = null;\n            }\n            return;\n        }\n        toc.current = { widget, generator };\n    }\n}\n/**\n * Initialization data for the ToC extension.\n *\n * @private\n */\nconst extension = {\n    id: '@jupyterlab/toc:plugin',\n    autoStart: true,\n    provides: ITableOfContentsRegistry,\n    requires: [\n        IDocumentManager,\n        IEditorTracker,\n        ILabShell,\n        ILayoutRestorer,\n        IMarkdownViewerTracker,\n        INotebookTracker,\n        IRenderMimeRegistry,\n        ITranslator\n    ],\n    activate: activateTOC\n};\n/**\n * Exports.\n */\nexport default extension;\n//# sourceMappingURL=index.js.map"],"sourceRoot":""}